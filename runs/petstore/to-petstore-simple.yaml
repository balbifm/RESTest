openapi: 3.0.3

info:
  title: Swagger Petstore - OpenAPI 3.0
  version: 1.0.0

servers:
  - url: http://localhost:8081/petstore
    description: Production

tags:
  - name: pet
    description: Everything about your Pets
  - name: store
    description: Access to Petstore orders

paths:
  /pet/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
        - $ref: "#/components/parameters/Client-Id"
        - $ref: "#/components/parameters/Client-Secret"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
  /store/inventory:
    parameters:
      - $ref: "#/components/parameters/Client-Id"
      - $ref: "#/components/parameters/Client-Secret"
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet

  parameters:
    Client-Id:
      name: client_id
      description: The client id of an approved contract of the client app for the API from Mulesoft's Rate Limiting - SLA based Policy
      in: header
      schema:
        type: string
        pattern: ^[a-zA-Z0-9!@#\$%\^&\*\(\)\-_\+=\[\]\{\}\\\|:;'",\.<>\/\?~`]*$
      required: true
      example: d1374b15c6864c3682ddbed2a247a826
    Client-Secret:
      name: client_secret
      description: The client secret of an approved contract of the client app for the API from Mulesoft's Rate Limiting - SLA based Policy
      in: header
      schema:
        type: string
        pattern: ^[a-zA-Z0-9!@#\$%\^&\*\(\)\-_\+=\[\]\{\}\\\|:;'",\.<>\/\?~`]*$
      required: true
      example: 4a87fe7e2e43488c927372AEF981F066
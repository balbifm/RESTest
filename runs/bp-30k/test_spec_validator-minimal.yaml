{
  "openapi": "3.0.1",
  "info": {
    "title": "Commerce Webservices",
    "description": "These services manage all of the common commerce functionality, and also include customizations from installed AddOns. The implementing extension is called commercewebservices.",
    "license": {
      "name": "Use of this file is subject to the terms of your agreement with SAP SE or its affiliates respecting the use of the SAP product for which this file relates.",
      "url": "https://www.sap.com"
    },
    "version": "2.2.1"
  },
  "externalDocs": {
    "description": "SAP Commerce Cloud",
    "url": "https://www.sap.com"
  },
  "servers": [
    {
      "url": "http://localhost:8081/bp",
      "description": "SAP Commerce Cloud Dev Server URL"
    }
  ],
  "security": [
    {
      "oauth2_Password": [
        "basic"
      ]
    },
    {
      "oauth2_client_credentials": [
        "extended"
      ]
    }
  ],
  "paths": {
    "/{baseSiteId}/users/{userId}/carts/{cartId}/entrygroups/{entryGroupNumber}": {
      "post": {
        "tags": [
          "Cart Entry Groups"
        ],
        "summary": "Add a product to a cart entry group.",
        "description": "Adds a product to a cart entry group.",
        "operationId": "addToCartEntryGroup",
        "parameters": [
          {
            "name": "baseSiteId",
            "in": "path",
            "description": "Base site identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "description": "Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryGroupNumber",
            "in": "path",
            "description": "Each entry group in a cart has a specific entry group number. Entry group numbers are integers starting at one. They are defined in ascending order.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DEFAULT"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CartModification"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartModification"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2_Password": [
              "basic"
            ]
          },
          {
            "oauth2_client_credentials": [
              "extended"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Cart Entry Groups"
        ],
        "summary": "Delete an entry group.",
        "description": "Removes an entry group from an associated cart. The entry group is identified by an entryGroupNumber. The cart is identified by the cartId.",
        "operationId": "removeCartEntryGroup",
        "parameters": [
          {
            "name": "baseSiteId",
            "in": "path",
            "description": "Base site identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartId",
            "in": "path",
            "description": "Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryGroupNumber",
            "in": "path",
            "description": "Each entry group in a cart has a specific entry group number. Entry group numbers are integers starting at one. They are defined in ascending order.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorList"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2_Password": [
              "basic"
            ]
          },
          {
            "oauth2_client_credentials": [
              "extended"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DownloadMyTransactionsDTO": {
        "type": "object",
        "properties": {
          "cidLedger": {
            "$ref": "#/components/schemas/CIDLedgerDTO"
          },
          "dealer": {
            "$ref": "#/components/schemas/CastrolDealersWsData"
          },
          "distributorGSTNNo": {
            "type": "string"
          },
          "customerGSTNNo": {
            "type": "string"
          },
          "creditedTo": {
            "$ref": "#/components/schemas/Address"
          },
          "parentId": {
            "type": "string"
          },
          "schemeDescription": {
            "type": "string"
          }
        }
      },
      "InvoiceFilterCodeAndCount": {
        "type": "object",
        "properties": {
          "invoiceStatusCount": {
            "$ref": "#/components/schemas/InvoiceStatusList"
          },
          "disputeStatusCount": {
            "$ref": "#/components/schemas/DisputeStatusList"
          }
        }
      },
      "ConsentTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Consent template identifier"
          },
          "name": {
            "type": "string",
            "description": "Consent template name"
          },
          "description": {
            "type": "string",
            "description": "Consent template description"
          },
          "version": {
            "type": "integer",
            "description": "Consent template version",
            "format": "int32"
          },
          "currentConsent": {
            "$ref": "#/components/schemas/Consent"
          }
        },
        "description": "Representation of a Consent Template"
      },
      "Product": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the product"
          },
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "url": {
            "type": "string",
            "description": "Url address of the product"
          },
          "description": {
            "type": "string",
            "description": "Description of the product"
          },
          "purchasable": {
            "type": "boolean",
            "description": "Flag defining if product is purchasable"
          },
          "stock": {
            "$ref": "#/components/schemas/Stock"
          },
          "futureStocks": {
            "type": "array",
            "description": "List of future stocks",
            "items": {
              "$ref": "#/components/schemas/FutureStock"
            }
          },
          "availableForPickup": {
            "type": "boolean",
            "description": "Flag defining if product is available for pickup"
          },
          "averageRating": {
            "type": "number",
            "description": "Rating number of average value",
            "format": "double"
          },
          "numberOfReviews": {
            "type": "integer",
            "description": "Number of reviews associated with the product",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "description": "Product summary"
          },
          "manufacturer": {
            "type": "string",
            "description": "Data of product manufacturer"
          },
          "variantType": {
            "type": "string",
            "description": "Variant type of the product"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "baseProduct": {
            "type": "string",
            "description": "Information about base product"
          },
          "images": {
            "type": "array",
            "description": "List of images linked to product",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "categories": {
            "type": "array",
            "description": "List of categories product belongs to",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "reviews": {
            "type": "array",
            "description": "List of reviews associated with the product",
            "items": {
              "$ref": "#/components/schemas/Review"
            }
          },
          "classifications": {
            "type": "array",
            "description": "List of classifications related to the product",
            "items": {
              "$ref": "#/components/schemas/Classification"
            }
          },
          "potentialPromotions": {
            "type": "array",
            "description": "List of potential promotions related to the product",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          },
          "variantOptions": {
            "type": "array",
            "description": "List of variant options related to the product",
            "items": {
              "$ref": "#/components/schemas/VariantOption"
            }
          },
          "baseOptions": {
            "type": "array",
            "description": "List of base options related to the product",
            "items": {
              "$ref": "#/components/schemas/BaseOption"
            }
          },
          "volumePricesFlag": {
            "type": "boolean",
            "description": "Flag stating if volume price should be displayed"
          },
          "volumePrices": {
            "type": "array",
            "description": "List of volume prices",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "productReferences": {
            "type": "array",
            "description": "List of product references",
            "items": {
              "$ref": "#/components/schemas/ProductReference"
            }
          },
          "variantMatrix": {
            "type": "array",
            "description": "List of variant matrixes associated with the product",
            "items": {
              "$ref": "#/components/schemas/VariantMatrixElement"
            }
          },
          "priceRange": {
            "$ref": "#/components/schemas/PriceRange"
          },
          "multidimensional": {
            "type": "boolean",
            "description": "Flag stating if product is multidimensional"
          },
          "configuratorType": {
            "type": "string",
            "description": "Configurator type related to the product"
          },
          "configurable": {
            "type": "boolean",
            "description": "Flag stating if product is configurable"
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "description": "Tags associated with the product",
            "items": {
              "type": "string",
              "description": "Tags associated with the product"
            }
          },
          "firstVariantCode": {
            "type": "string"
          },
          "firstVariantImage": {
            "type": "string"
          },
          "skuCode": {
            "type": "string",
            "description": "Sku Code of the variant product"
          },
          "variantProductCode": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "favourite": {
            "type": "boolean"
          },
          "plantAvailabilityStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolPlantAndStatusData"
            }
          },
          "salesAreaAvailabilityStatus": {
            "$ref": "#/components/schemas/CastrolSalesAreaAndStatus"
          },
          "skuVisibility": {
            "type": "boolean"
          },
          "maxRetailPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "distributorListedPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "schemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradeScheme"
            }
          },
          "exclusiveDiscount": {
            "type": "number",
            "format": "double"
          },
          "productUnitMeasure": {
            "type": "string"
          },
          "offerings": {
            "type": "string"
          },
          "keyContacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regionalAvailability": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productMaturity": {
            "type": "string"
          },
          "nexusProductTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Representation of a Product"
      },
      "CastrolIndirectCancelOrder": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "code": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "B2BPaymentTypeList": {
        "type": "object",
        "properties": {
          "paymentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/B2BPaymentType"
            }
          }
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the feature"
          },
          "name": {
            "type": "string",
            "description": "Name of the feature"
          },
          "description": {
            "type": "string",
            "description": "Description of the feature"
          },
          "type": {
            "type": "string",
            "description": "Type of the feature"
          },
          "range": {
            "type": "boolean",
            "description": "Range number of the feature"
          },
          "comparable": {
            "type": "boolean",
            "description": "Flag defining it feature is comparable"
          },
          "featureUnit": {
            "$ref": "#/components/schemas/FeatureUnit"
          },
          "featureValues": {
            "type": "array",
            "description": "List of feature values",
            "items": {
              "$ref": "#/components/schemas/FeatureValue"
            }
          }
        },
        "description": "Representation of a Feature"
      },
      "PromotionResult": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of promotion result"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "consumedEntries": {
            "type": "array",
            "description": "List of promotion order entries consumed",
            "items": {
              "$ref": "#/components/schemas/PromotionOrderEntryConsumed"
            }
          }
        },
        "description": "Representation of a Promotion result"
      },
      "AccountSearch": {
        "type": "object",
        "properties": {
          "legalEntityId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "grn": {
            "type": "string"
          }
        }
      },
      "AviationSearchSaveOfferByLocation": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          }
        }
      },
      "BudgetList": {
        "type": "object",
        "properties": {
          "budgets": {
            "type": "array",
            "description": "List of Budgets",
            "items": {
              "$ref": "#/components/schemas/Budget"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of a Budget List"
      },
      "SpecialOpeningDay": {
        "type": "object",
        "properties": {
          "openingTime": {
            "$ref": "#/components/schemas/Time"
          },
          "closingTime": {
            "$ref": "#/components/schemas/Time"
          },
          "date": {
            "type": "string",
            "description": "Date of special opening day",
            "format": "date-time"
          },
          "formattedDate": {
            "type": "string",
            "description": "Text representation of the date of special opening day"
          },
          "closed": {
            "type": "boolean",
            "description": "Flag stating if special opening day is closed"
          },
          "name": {
            "type": "string",
            "description": "Name of the special opening day event"
          },
          "comment": {
            "type": "string",
            "description": "Comment field"
          }
        },
        "description": "Representation of a special opening day"
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Suggestion value"
          }
        },
        "description": "Representation of a Suggestion"
      },
      "BaseSiteList": {
        "type": "object",
        "properties": {
          "baseSites": {
            "type": "array",
            "description": "List of basesites",
            "items": {
              "$ref": "#/components/schemas/BaseSite"
            }
          }
        },
        "description": "Representation of a Base Site List"
      },
      "AviationCreateFuelOrderRequestBody": {
        "type": "object",
        "properties": {
          "refNo": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "createdTime": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "updatedTime": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          },
          "iata": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "icao": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "sapId": {
            "type": "string"
          },
          "upliftVolume": {
            "type": "string"
          },
          "checkRefueling": {
            "type": "boolean"
          },
          "refuelingDateOfDeparture": {
            "type": "string"
          },
          "refuelingTimeOfDeparture": {
            "type": "string"
          },
          "airportName": {
            "type": "string"
          },
          "deliveryPointUid": {
            "type": "string"
          },
          "isFlightOperator": {
            "type": "boolean"
          },
          "operatorName": {
            "type": "string"
          },
          "customerEmail": {
            "type": "string"
          },
          "additionalEmail5": {
            "type": "string"
          },
          "additionalEmail3": {
            "type": "string"
          },
          "additionalEmail4": {
            "type": "string"
          },
          "additionalEmail2": {
            "type": "string"
          },
          "additionalEmail1": {
            "type": "string"
          },
          "dateOfDeparture": {
            "type": "string"
          },
          "timeOfDeparture": {
            "type": "string"
          },
          "additionalNotes": {
            "type": "string"
          },
          "deliveryArea": {
            "type": "string"
          },
          "userGRN": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "fuelProvider": {
            "type": "string"
          },
          "checkVolume": {
            "type": "boolean"
          },
          "timeZone": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "dateOfArrival": {
            "type": "string"
          },
          "timeOfArrival": {
            "type": "string"
          },
          "aircraftType": {
            "type": "string"
          },
          "fuelType": {
            "type": "string"
          },
          "registerNumber": {
            "type": "string"
          },
          "flightNumber": {
            "type": "string"
          },
          "nextDestination": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "attachment": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pricingDifferential": {
            "type": "string"
          },
          "pricingDescription": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "isBandPrice": {
            "type": "boolean"
          },
          "validUntil": {
            "type": "string"
          },
          "emailId": {
            "type": "string"
          },
          "pricingUOM": {
            "type": "string"
          },
          "pricingCurrency": {
            "type": "string"
          }
        }
      },
      "NextGenB2BUnit": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PricesList": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "iata": {
            "type": "string"
          },
          "icao": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "deliveryArea": {
            "type": "string"
          },
          "deliveryPointUid": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "fuelType": {
            "type": "string"
          },
          "fuelProvider": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "taxesAndFees": {
            "$ref": "#/components/schemas/TaxesAndFees"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "airportInformation": {
            "$ref": "#/components/schemas/AirPortInfo"
          }
        }
      },
      "QuoteList": {
        "type": "object",
        "properties": {
          "quotes": {
            "type": "array",
            "description": "List of quotes.",
            "items": {
              "$ref": "#/components/schemas/Quote"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of a Quote result list."
      },
      "UserSignUp": {
        "required": [
          "firstName",
          "lastName",
          "password",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "user id, unique string required to create new user. It can be email"
          },
          "firstName": {
            "type": "string",
            "description": "first name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "last name of the user"
          },
          "titleCode": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "description": "user password"
          }
        },
        "description": "User's object."
      },
      "ScheduleReplenishmentForm": {
        "type": "object",
        "properties": {
          "replenishmentStartDate": {
            "type": "string",
            "description": "First day for replenishment order",
            "format": "date-time"
          },
          "numberOfDays": {
            "type": "string",
            "description": "How frequent replenishment should be activated expressed in days. Mandatory with 'recurrencePeriod=DAILY'.",
            "example": "14"
          },
          "numberOfWeeks": {
            "type": "string",
            "description": "How frequent replenishment should be activated expressed in weeks. Mandatory with 'recurrencePeriod=WEEKLY'.",
            "example": "1"
          },
          "nthDayOfMonth": {
            "type": "string",
            "description": "On which date of month replenishment should be activated. Mandatory with 'recurrencePeriod=MONTHLY'.",
            "example": "1"
          },
          "recurrencePeriod": {
            "type": "string",
            "description": "Replenishment recurrence period. Available values are DAILY, WEEKLY and MONTHLY. DAILY requires 'numberOfDays'. WEEKLY requires 'daysOfWeek' AND 'numberOfWeeks'. MONTHLY requires 'nthDayOfMonth'.",
            "example": "WEEKLY"
          },
          "daysOfWeek": {
            "type": "array",
            "description": "List of days of week on which replenishment should occur. Mandatory with 'recurrencePeriod=WEEKLY'.",
            "items": {
              "type": "string",
              "description": "List of days of week on which replenishment should occur. Mandatory with 'recurrencePeriod=WEEKLY'.",
              "enum": [
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY"
              ]
            }
          }
        },
        "description": "Schedule replenishment form object."
      },
      "Consent": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of consent"
          },
          "consentGivenDate": {
            "type": "string",
            "description": "Date of consenting",
            "format": "date-time"
          },
          "consentWithdrawnDate": {
            "type": "string",
            "description": "Consent withdrawn date",
            "format": "date-time"
          }
        },
        "description": "Representation of a Consent"
      },
      "Currency": {
        "type": "object",
        "properties": {
          "isocode": {
            "type": "string",
            "description": "Code of the currency in iso format"
          },
          "name": {
            "type": "string",
            "description": "Name of the currency"
          },
          "active": {
            "type": "boolean",
            "description": "Boolean flag whether currency is active"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol of the currency"
          }
        },
        "description": "Representation of a Currency"
      },
      "AviationRemoveSaveOfferRequestBody": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "cartId": {
            "type": "string"
          }
        }
      },
      "OrgUnitUserList": {
        "required": [
          "pagination",
          "sorts",
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "description": "List of users",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of an user list used in organizational units"
      },
      "QuoteStarter": {
        "type": "object",
        "properties": {
          "cartId": {
            "type": "string",
            "description": "CartId of the cart from which the quote will be created.",
            "example": "0003050"
          },
          "quoteCode": {
            "type": "string",
            "description": "Code of the quote for the requote action.",
            "example": "0003060"
          }
        },
        "description": "Object representing ways of creating new quote - by cartId for creating a new quote from the cart, by quoteCode for the requote action "
      },
      "VoucherList": {
        "type": "object",
        "properties": {
          "vouchers": {
            "type": "array",
            "description": "List of vouchers",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            }
          }
        },
        "description": "Representation of a Voucher List"
      },
      "AviationSearchSaveOfferAccountResponse": {
        "type": "object",
        "properties": {
          "grn": {
            "type": "string"
          },
          "account": {
            "type": "string"
          }
        }
      },
      "B2BApprovalProcessList": {
        "required": [
          "approvalProcesses"
        ],
        "type": "object",
        "properties": {
          "approvalProcesses": {
            "type": "array",
            "description": "List of Organizational Approval Process",
            "items": {
              "$ref": "#/components/schemas/B2BApprovalProcess"
            }
          }
        },
        "description": "Representation of an organizational approval process list"
      },
      "NotificationInnerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "formattedDate": {
            "type": "string"
          }
        }
      },
      "OrderApprovalPermissionList": {
        "required": [
          "orderApprovalPermissions",
          "pagination",
          "sorts"
        ],
        "type": "object",
        "properties": {
          "orderApprovalPermissions": {
            "type": "array",
            "description": "List of Order Approval Permissions",
            "items": {
              "$ref": "#/components/schemas/OrderApprovalPermission"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of a Order Approval Permission List"
      },
      "ProductFutureStocksList": {
        "type": "object",
        "properties": {
          "productFutureStocks": {
            "type": "array",
            "description": "List of product future stocks",
            "items": {
              "$ref": "#/components/schemas/ProductFutureStocks"
            }
          }
        },
        "description": "Representation of a Product Future Stocks List"
      },
      "MyTransactionsDTO": {
        "type": "object",
        "properties": {
          "castrolDealerInvoicesList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolDealerInvoiceDTO"
            }
          },
          "cidLedgersList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIDLedgerDTO"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          }
        }
      },
      "OrderApprovalPermissionTypeList": {
        "required": [
          "orderApprovalPermissionTypes"
        ],
        "type": "object",
        "properties": {
          "orderApprovalPermissionTypes": {
            "type": "array",
            "description": "List of Order Approval Permission Types",
            "items": {
              "$ref": "#/components/schemas/OrderApprovalPermissionType"
            }
          }
        },
        "description": "Representation of an Order Approval Permission Type list"
      },
      "AviationUserPreference": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "grn": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "sapId": {
            "type": "string"
          },
          "defaultEmail": {
            "type": "string"
          },
          "additionalEmail": {
            "type": "string"
          },
          "dueDays": {
            "type": "integer",
            "format": "int32"
          },
          "quickViewUrl": {
            "type": "string"
          },
          "quickViewPDF": {
            "type": "string"
          },
          "newInvoiceNotification": {
            "type": "string"
          },
          "paymentDueReminder": {
            "type": "string"
          },
          "bundles": {
            "type": "string"
          },
          "disputeNotification": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          }
        }
      },
      "UninvoicedDelivery": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "grnNumber": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "aircraftId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "deliveryId": {
            "type": "string"
          },
          "deliveryDate": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "deliveryQty": {
            "type": "string"
          },
          "deliveryQtyUom": {
            "type": "string"
          },
          "estValPay": {
            "type": "string"
          },
          "flightId": {
            "type": "string"
          },
          "deliveryReceipt": {
            "type": "string"
          }
        }
      },
      "AviationCollector": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isActive": {
            "type": "string"
          },
          "collectorCode": {
            "type": "string"
          }
        }
      },
      "AviationDelivery": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "grnNumber": {
            "type": "string"
          },
          "collectorName": {
            "type": "string"
          },
          "invoiceDate": {
            "type": "string"
          },
          "disputeStatus": {
            "type": "string"
          },
          "disputeLevel": {
            "type": "string"
          },
          "disputeId": {
            "type": "string"
          },
          "disputeMessage": {
            "type": "string"
          },
          "dueDate": {
            "type": "string"
          },
          "invoiceStatus": {
            "type": "string"
          },
          "cardNumber": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "aircraftId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "deliveryId": {
            "type": "string"
          },
          "deliveryDate": {
            "type": "string"
          },
          "isInternal": {
            "type": "string"
          },
          "productName": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deliveryQty": {
            "type": "string"
          },
          "deliveryQtyUom": {
            "type": "string"
          },
          "inDispute": {
            "type": "string"
          },
          "flightId": {
            "type": "string"
          },
          "deliveryReceipt": {
            "type": "string"
          },
          "totalProducts": {
            "type": "string"
          },
          "totalCharges": {
            "type": "string"
          },
          "totalValue": {
            "type": "string"
          },
          "quantityInvoiced": {
            "type": "string"
          },
          "isTicketAvailable": {
            "type": "string"
          }
        }
      },
      "Stock": {
        "type": "object",
        "properties": {
          "stockLevelStatus": {
            "type": "string",
            "description": "Status of stock level",
            "example": "inStock"
          },
          "stockLevel": {
            "type": "integer",
            "description": "Stock level expressed as number",
            "format": "int64",
            "example": 25
          },
          "isValueRounded": {
            "type": "boolean",
            "description": "Indicate whether Stock level value is rounded",
            "example": false
          }
        },
        "description": "Representation of a Stock"
      },
      "AviationGetFuelOrderResponseBody": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/AviationPaginationDto"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationGetFuelOrderResponse"
            }
          }
        }
      },
      "NextGenInvoiceEntry": {
        "type": "object",
        "properties": {
          "entryNumber": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "invoiceLineQuantity": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineHSNNumber": {
            "type": "string"
          },
          "invoiceLineRatePerPack": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineTotalPrice": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineMRP": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineNoPacks": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineSchemeDiscountValue": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineCouponDiscountValue": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineValueExcludingGST": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineCGSTTax": {
            "type": "number",
            "format": "double"
          },
          "invoiceLineSGSTTax": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CastrolIndirectCancelOrderFormData": {
        "type": "object",
        "properties": {
          "cancelReason": {
            "type": "string"
          }
        },
        "description": "Cancel Reason Json object (cancelReason)"
      },
      "Consignment": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Consignment code"
          },
          "trackingID": {
            "type": "string",
            "description": "Consignment tracking identifier"
          },
          "status": {
            "type": "string",
            "description": "Consignment status"
          },
          "statusDisplay": {
            "type": "string",
            "description": "Consignment status display"
          },
          "statusDate": {
            "type": "string",
            "description": "Consignment status date",
            "format": "date-time"
          },
          "entries": {
            "type": "array",
            "description": "List of consignment entries",
            "items": {
              "$ref": "#/components/schemas/ConsignmentEntry"
            }
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "deliveryPointOfService": {
            "$ref": "#/components/schemas/PointOfService"
          }
        },
        "description": "Representation of a Consignment"
      },
      "NextGenInvoiceOrderInformation": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "externalOrderNumber": {
            "type": "string"
          }
        }
      },
      "OrgDocumentAttachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Organizational document attachment identifier.",
            "example": "INPG-00100001"
          }
        },
        "description": "Attachments associated to the organizational document."
      },
      "CastrolDealerInvoiceDTO": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentReceiptNumber": {
            "type": "string"
          },
          "paymentReceiptDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentReceiptAmount": {
            "type": "number",
            "format": "double"
          },
          "distributorName": {
            "type": "string"
          },
          "dealerName": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "partyCode": {
            "type": "string"
          },
          "schemeCode": {
            "type": "string"
          },
          "paymentMode": {
            "type": "string"
          }
        }
      },
      "CEDOrderEntryAttribute": {
        "type": "object",
        "properties": {
          "entryNumber": {
            "type": "integer",
            "format": "int32"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "string"
          },
          "discount": {
            "$ref": "#/components/schemas/CEDDiscount"
          },
          "product": {
            "$ref": "#/components/schemas/CastrolProduct"
          },
          "allocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          },
          "orderEntryQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "plant": {
            "type": "string"
          },
          "isItemEligibleForChange": {
            "type": "boolean"
          },
          "unitPrice": {
            "type": "string"
          },
          "pricingUnit": {
            "type": "string"
          },
          "pricingUnitUom": {
            "type": "string"
          }
        }
      },
      "OrderStatusUpdateElement": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of update element of order status"
          },
          "status": {
            "type": "string",
            "description": "Status of update element"
          },
          "baseSiteId": {
            "type": "string",
            "description": "BaseSite identifier"
          }
        },
        "description": "Representation of an Order Status Update Element"
      },
      "UserGroupList": {
        "type": "object",
        "properties": {
          "userGroups": {
            "type": "array",
            "description": "List of user groups",
            "items": {
              "$ref": "#/components/schemas/UserGroup"
            }
          },
          "totalNumber": {
            "type": "integer",
            "description": "Total number",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "numberOfPages": {
            "type": "integer",
            "description": "Number of pages",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "description": "Current page",
            "format": "int32"
          }
        },
        "description": "Representation of an User Group List"
      },
      "ShipToUnitDetailsData": {
        "type": "object",
        "properties": {
          "shipToUnit": {
            "type": "string"
          },
          "salesOrg": {
            "type": "string"
          },
          "channelDivision": {
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "soldToUnit": {
            "type": "string"
          },
          "billToUnit": {
            "type": "string"
          },
          "soldToUnitName": {
            "type": "string"
          },
          "shipToUnitName": {
            "type": "string"
          },
          "shipToUnitName2": {
            "type": "string"
          },
          "billToUnitName": {
            "type": "string"
          },
          "currencyData": {
            "$ref": "#/components/schemas/CurrencyData"
          }
        }
      },
      "AmountBalance": {
        "type": "object",
        "properties": {
          "openBalance": {
            "type": "string",
            "description": "Open balance as the sum of all open transactional documents, including documents that are past the payment due date.",
            "example": "$430.45"
          },
          "pastDueBalance": {
            "type": "string",
            "description": "Past due balance as the sum of all open transactional documents that are past the payment due date.",
            "example": "$130.45"
          },
          "currentBalance": {
            "type": "string",
            "description": "Current balance as the sum of all open transactional documents that are not past the payment due date.",
            "example": "$300.00"
          },
          "dueBalances": {
            "type": "array",
            "description": "Balance due for each of the defined day ranges. For example, $100 due in 1-30 days, $200 due in 31-60 days, $300 due in 61-90 days, $400 due in 91+ days.",
            "items": {
              "$ref": "#/components/schemas/DueBalanceRange"
            }
          }
        },
        "description": "Account balance details."
      },
      "CountryList": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "description": "This is the list of Country fields that should be returned in the response body",
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          }
        },
        "description": "List of countries"
      },
      "Budget": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Boolean flag of whether the Budget is active"
          },
          "budget": {
            "type": "number",
            "description": "Value of Budget",
            "example": 50000
          },
          "code": {
            "type": "string",
            "description": "Code of the Budget",
            "example": "Monthly_50K_USD"
          },
          "name": {
            "type": "string",
            "description": "The name of the Budget",
            "example": "Monthly 50K USD"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "startDate": {
            "type": "string",
            "description": "The start date of the Budget",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "The end date of the Budget",
            "format": "date-time"
          },
          "selected": {
            "type": "boolean",
            "description": "Boolean flag whether the budget is selected for a cost center",
            "example": true
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "costCenters": {
            "type": "array",
            "description": "List of Cost Centers",
            "items": {
              "$ref": "#/components/schemas/B2BCostCenter"
            }
          }
        },
        "description": "Budget."
      },
      "OrderEntryList": {
        "type": "object",
        "properties": {
          "orderEntries": {
            "type": "array",
            "description": "List of order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          }
        },
        "description": "List of entries containing the product code along with quantity and entry number"
      },
      "AviationFuelOrderFilterRequestBody": {
        "type": "object",
        "properties": {
          "regNo": {
            "type": "string"
          },
          "grn": {
            "type": "string"
          },
          "airportName": {
            "type": "string"
          },
          "refNo": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "isPast": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          }
        }
      },
      "FutureStock": {
        "type": "object",
        "properties": {
          "stock": {
            "$ref": "#/components/schemas/Stock"
          },
          "date": {
            "type": "string",
            "description": "Date of future stock",
            "format": "date-time"
          },
          "formattedDate": {
            "type": "string",
            "description": "Date of future stock expressed in text value",
            "example": "31/12/2056"
          }
        },
        "description": "Representation of a Future Stock"
      },
      "TaxesAndFees": {
        "type": "object",
        "properties": {
          "deliveryType": {
            "type": "string"
          },
          "conditional": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Conditional"
            }
          },
          "compulsory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Compulsory"
            }
          }
        }
      },
      "AmendOrderRequest": {
        "type": "object",
        "properties": {
          "cancelOrder": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmendOrderEntry"
            }
          }
        },
        "description": "AmendOrderRequest"
      },
      "AviationDeliveryPoints": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "bpInternalLocID": {
            "type": "string"
          },
          "fuelProvider": {
            "type": "string"
          }
        }
      },
      "VariantOptionQualifier": {
        "type": "object",
        "properties": {
          "qualifier": {
            "type": "string",
            "description": "Qualifier"
          },
          "name": {
            "type": "string",
            "description": "Name of variant option qualifier"
          },
          "value": {
            "type": "string",
            "description": "Value of variant option qualifier"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          }
        },
        "description": "Representation of a Variant Option Qualifier"
      },
      "CustomerSearch": {
        "type": "object",
        "properties": {
          "bpId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "AviationFuelOrderCancelRequestBody": {
        "type": "object",
        "properties": {
          "cancelReason": {
            "type": "string"
          },
          "requestReference": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          }
        }
      },
      "PromotionRestriction": {
        "type": "object",
        "properties": {
          "restrictionType": {
            "type": "string",
            "description": "Type of the promotion restriction"
          },
          "description": {
            "type": "string",
            "description": "Description of the promotion restriction"
          }
        },
        "description": "Representation of a Promotion Restriction"
      },
      "NextGenError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "FuelProduct": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "purchasable": {
            "type": "boolean"
          },
          "stock": {
            "$ref": "#/components/schemas/Stock"
          },
          "futureStocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FutureStock"
            }
          },
          "availableForPickup": {
            "type": "boolean"
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "numberOfReviews": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "variantType": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "baseProduct": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            }
          },
          "classifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Classification"
            }
          },
          "potentialPromotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          },
          "variantOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantOption"
            }
          },
          "baseOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseOption"
            }
          },
          "volumePricesFlag": {
            "type": "boolean"
          },
          "volumePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "productReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReference"
            }
          },
          "variantMatrix": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantMatrixElement"
            }
          },
          "priceRange": {
            "$ref": "#/components/schemas/PriceRange"
          },
          "multidimensional": {
            "type": "boolean"
          },
          "configuratorType": {
            "type": "string"
          },
          "configurable": {
            "type": "boolean"
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productHierarchy1": {
            "type": "string"
          },
          "productHierarchy2": {
            "type": "string"
          },
          "productHierarchy3": {
            "type": "string"
          },
          "salesAreaText": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "materialName": {
            "type": "string"
          },
          "materialId": {
            "type": "string"
          },
          "salesOrganizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SAPSalesOrganization"
            }
          }
        }
      },
      "ConfigurationInfo": {
        "type": "object",
        "properties": {
          "configuratorType": {
            "type": "string",
            "description": "Type of configuration info"
          },
          "status": {
            "type": "string",
            "description": "Status of configuration info"
          },
          "configurationLabel": {
            "type": "string",
            "description": "Label of configuration info"
          },
          "configurationValue": {
            "type": "string",
            "description": "Value of configuration info"
          }
        },
        "description": "Representation of a Configuration Info"
      },
      "ProductList": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "description": "List of products",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "catalog": {
            "type": "string",
            "description": "Catalog of product list"
          },
          "version": {
            "type": "string",
            "description": "Version of product list"
          },
          "totalProductCount": {
            "type": "integer",
            "description": "Total product count",
            "format": "int32"
          },
          "totalPageCount": {
            "type": "integer",
            "description": "Total page count",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "description": "Number of current page",
            "format": "int32"
          }
        },
        "description": "Representation of a Product List"
      },
      "CIDDealerBannerAcceptance": {
        "type": "object",
        "properties": {
          "bannerId": {
            "type": "string"
          },
          "acceptance": {
            "type": "boolean"
          }
        }
      },
      "CastrolPlantAndStatusData": {
        "type": "object",
        "properties": {
          "plant": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "madeToOrder": {
            "type": "string"
          }
        }
      },
      "B2BCostCenterShallow": {
        "type": "object",
        "properties": {
          "originalCode": {
            "type": "string",
            "description": "The original code of the cost center. Deprecated since 2005.",
            "example": "Custom_Retail",
            "deprecated": true
          },
          "name": {
            "type": "string",
            "description": "The name of the cost center",
            "example": "Custom Retail"
          },
          "active": {
            "type": "string",
            "description": "Indication of whether the cost center is active. Deprecated since 2005. Read-only, used for display purposes.",
            "example": "true",
            "deprecated": true
          },
          "activeFlag": {
            "type": "boolean",
            "description": "Boolean flag of whether the cost center is active.",
            "example": true
          },
          "code": {
            "type": "string",
            "description": "The code of the cost center",
            "example": "Custom_Retail"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "description": "Representation of a cost center. This bean is shallow, which means its potential relationship fields to other Org Unit fields are simple ids. No Org Unit WsDTO fields should be declared in this bean to avoid circular references."
      },
      "AviationAppliedFilterRequestBody": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          },
          "location": {
            "type": "string"
          },
          "grn": {
            "type": "string"
          },
          "fuelGrade": {
            "type": "string"
          },
          "cartId": {
            "type": "string"
          }
        }
      },
      "CastrolRecommendedProductList": {
        "type": "object",
        "properties": {
          "recommendedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolRecommendedProduct"
            }
          }
        }
      },
      "CastrolRecommendedProduct": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "DisputeComment": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "disputeId": {
            "type": "string"
          },
          "commentType": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdOn": {
            "type": "string"
          },
          "collectorNote": {
            "type": "string"
          },
          "isInternal": {
            "type": "string"
          }
        }
      },
      "B2BUnitNode": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the organizational unit represented by the node",
            "example": "Pronto_Retail"
          },
          "name": {
            "type": "string",
            "description": "Name of the organizational unit represented by the node",
            "example": "Pronto Retail"
          },
          "parent": {
            "type": "string",
            "description": "Unique identifier of organizational unit node's parent unit",
            "example": "Pronto"
          },
          "active": {
            "type": "boolean",
            "description": "Boolean flag of whether organizational unit represented by the node is active",
            "example": true
          },
          "children": {
            "type": "array",
            "description": "Child nodes of the organizational unit node",
            "items": {
              "$ref": "#/components/schemas/B2BUnitNode"
            }
          }
        },
        "description": "Representation of an organizational unit node"
      },
      "AccountSummary": {
        "type": "object",
        "properties": {
          "orgUnit": {
            "$ref": "#/components/schemas/OrgUnitReference"
          },
          "amountBalance": {
            "$ref": "#/components/schemas/AmountBalance"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "creditLimit": {
            "type": "string",
            "description": "Credit limit amount, formatted as per the selected currency.",
            "example": "$15,000.00"
          },
          "accountManagerName": {
            "type": "string",
            "description": "Name of the account manager.",
            "example": "Elke Vogel"
          },
          "accountManagerEmail": {
            "type": "string",
            "description": "Email of the account manager.",
            "example": "elke.vogel@rustic.com"
          }
        },
        "description": "Account summary of an organizational unit."
      },
      "NotificationDataResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataImportErrorResponse"
            }
          },
          "data": {
            "$ref": "#/components/schemas/Notification"
          }
        }
      },
      "AviationDispute": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "grnNumber": {
            "type": "string"
          },
          "disputeId": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "deliveryId": {
            "type": "string"
          },
          "deliveryReceiptNumber": {
            "type": "string"
          },
          "disputeDate": {
            "type": "string"
          },
          "disputeLevel": {
            "type": "string"
          },
          "disputeStatus": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "disputeCategory": {
            "type": "string"
          },
          "collectorsName": {
            "type": "string"
          },
          "justification": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "collectorsId": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdOn": {
            "type": "string"
          },
          "readOn": {
            "type": "string"
          },
          "closedOn": {
            "type": "string"
          },
          "deliveryDate": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "isExternal": {
            "type": "string"
          },
          "resolutionCode": {
            "type": "string"
          }
        }
      },
      "CartModificationList": {
        "type": "object",
        "properties": {
          "cartModifications": {
            "type": "array",
            "description": "List of cart modifications",
            "items": {
              "$ref": "#/components/schemas/CartModification"
            }
          }
        },
        "description": "Representation of a Cart modification list"
      },
      "QuoteDiscount": {
        "type": "object",
        "properties": {
          "discountType": {
            "type": "string",
            "description": "Type of the discount - PERCENT for discount by percentage, ABSOLUTE for discount by amount, TARGET for discount by adjustment of the total value",
            "example": "PERCENT"
          },
          "discountRate": {
            "type": "number",
            "description": "Value of the discount",
            "format": "double",
            "example": 10
          }
        },
        "description": "Discount applied to the quote - discountType for type of the discount, discountRate for value of the discount "
      },
      "AviationSaveOffer": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string"
          },
          "grn": {
            "type": "string"
          },
          "sapId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricesList"
            }
          }
        }
      },
      "AirPortInfo": {
        "type": "object",
        "properties": {
          "fuelProvider": {
            "type": "string"
          },
          "preAdvisedFlightInfo": {
            "type": "string"
          },
          "fuelProviderOpeningHours": {
            "type": "string"
          },
          "isFuelAvailableOutOfHours": {
            "type": "string"
          },
          "fuelProviderEmail": {
            "type": "string"
          },
          "fuelProviderTelephone": {
            "type": "string"
          },
          "fuelProviderFax": {
            "type": "string"
          },
          "airBPCustomerServicePhone": {
            "type": "string"
          },
          "airBPCustomerServiceEmail": {
            "type": "string"
          }
        }
      },
      "ProductExpressUpdateElementList": {
        "type": "object",
        "properties": {
          "productExpressUpdateElements": {
            "type": "array",
            "description": "List of product express update element",
            "items": {
              "$ref": "#/components/schemas/ProductExpressUpdateElement"
            }
          }
        },
        "description": "Representation of a Product Express Update Element List"
      },
      "CartModification": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status code of cart modification"
          },
          "quantityAdded": {
            "type": "integer",
            "description": "Quantity added with cart modification",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "description": "Final quantity after cart modification",
            "format": "int64"
          },
          "entry": {
            "$ref": "#/components/schemas/OrderEntry"
          },
          "deliveryModeChanged": {
            "type": "boolean",
            "description": "Delivery mode changed"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message"
          },
          "orderVolumeMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalPrice": {
            "$ref": "#/components/schemas/PriceData"
          }
        },
        "description": "Representation of a Cart modification"
      },
      "CastrolTotalUnit": {
        "type": "object",
        "properties": {
          "unitOfMeasure": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PromotionOrderEntryConsumed": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Order entry code"
          },
          "adjustedUnitPrice": {
            "type": "number",
            "description": "Adjusted unit price for promotion order entry",
            "format": "double"
          },
          "orderEntryNumber": {
            "type": "integer",
            "description": "Order entry number",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of promotion order entry",
            "format": "int64"
          }
        },
        "description": "Representation of a Promotion order entry consumed"
      },
      "GeoPoint": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Geopoint latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Geopoint longitude",
            "format": "double"
          }
        },
        "description": "Representation of a GeoPoint"
      },
      "AviationTaxAndCharges": {
        "type": "object",
        "properties": {
          "totalCharges": {
            "type": "string"
          },
          "totalInvoiceValue": {
            "type": "string"
          },
          "taxAndChargesResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationTaxAndCharge"
            }
          }
        }
      },
      "PointOfService": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the point of service",
            "example": "Misato"
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the point of service"
          },
          "url": {
            "type": "string",
            "description": "Url address of the point of service"
          },
          "description": {
            "type": "string",
            "description": "Description of the point of service"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningSchedule"
          },
          "storeContent": {
            "type": "string",
            "description": "Store content of given point of service"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "List of features for a given point of service"
            },
            "description": "List of features for a given point of service"
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "formattedDistance": {
            "type": "string",
            "description": "Distance to the point of service as text value"
          },
          "distanceKm": {
            "type": "number",
            "description": "Distance to the point of service as number value",
            "format": "double"
          },
          "mapIcon": {
            "$ref": "#/components/schemas/Image"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "storeImages": {
            "type": "array",
            "description": "Collection of images associated with a point of service",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "pickUpInStoreInstructions": {
            "type": "string",
            "description": "Instructions used for picking up an order in store"
          }
        },
        "description": "Representation of a Point of service"
      },
      "NextGenImportFileJson": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          }
        }
      },
      "UninvoicedDeliveryPaginationAndData": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "uninvoicedDeliveryResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninvoicedDelivery"
            }
          }
        }
      },
      "VendorLinePaginationAndData": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "vendorLineResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorLines"
            }
          }
        }
      },
      "OrderApprovalRecord": {
        "type": "object",
        "properties": {
          "permissionTypes": {
            "type": "array",
            "description": "List of permission types related to this approval record.",
            "items": {
              "$ref": "#/components/schemas/OrderApprovalPermissionType"
            }
          },
          "approver": {
            "$ref": "#/components/schemas/Principal"
          },
          "statusDisplay": {
            "type": "string",
            "description": "Status of the order approval.",
            "example": "Pending approval"
          },
          "comments": {
            "type": "string",
            "description": "Any comments the approver (or the workflow system) added to the approval item.",
            "example": "Submitted for approval"
          }
        },
        "description": "Details of one order approval record"
      },
      "MemberList": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "description": "List of member",
            "items": {
              "$ref": "#/components/schemas/Principal"
            }
          }
        },
        "description": "List of users to assign to customer group."
      },
      "OrderApprovalDecision": {
        "required": [
          "decision"
        ],
        "type": "object",
        "properties": {
          "decision": {
            "type": "string",
            "description": "Decision from the approver when approving/rejecting an order. Typical decisions are: APPROVE, REJECT",
            "example": "APPROVE"
          },
          "comment": {
            "type": "string",
            "description": "Any comments the approver (or the workflow system) adds when approving/rejecting an order.",
            "example": "Rejected because montly budget was exceeded"
          }
        },
        "description": "The order approval decision. The approval decision field is mandatory, and the approval comment field is mandatory if the decision is 'rejected'."
      },
      "TradeScheme": {
        "type": "object",
        "properties": {
          "distributorCode": {
            "type": "string"
          },
          "distributorName": {
            "type": "string"
          },
          "schemeName": {
            "type": "string"
          },
          "schemeDescription": {
            "type": "string"
          },
          "target": {
            "type": "number",
            "format": "double"
          },
          "achievement": {
            "type": "number",
            "format": "double"
          },
          "pending": {
            "type": "integer",
            "format": "int32"
          },
          "daysPending": {
            "type": "integer",
            "format": "int32"
          },
          "payOut": {
            "type": "number",
            "format": "double"
          },
          "formattedValuePayOut": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "schemeCode": {
            "type": "string"
          },
          "remaining": {
            "type": "number",
            "format": "double"
          },
          "skewAvailable": {
            "type": "boolean"
          },
          "schemeType": {
            "type": "string"
          },
          "payoutType": {
            "type": "string"
          },
          "castrolIndirectSkewSchemeData": {
            "$ref": "#/components/schemas/CastrolIndirectSkewSchemeWSData"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "outputVolume": {
            "type": "number",
            "format": "double"
          },
          "currentFocEligibility": {
            "type": "number",
            "format": "double"
          },
          "additionalFocEligible": {
            "type": "number",
            "format": "double"
          },
          "estimatedTotalFocEligible": {
            "type": "number",
            "format": "double"
          },
          "currentFocCycle": {
            "type": "integer",
            "format": "int32"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "focSKUName": {
            "type": "string"
          },
          "currentCycle": {
            "type": "integer",
            "format": "int32"
          },
          "totalCycle": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "nextLevelMinSlabTarget": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ReturnRequestEntry": {
        "type": "object",
        "properties": {
          "orderEntry": {
            "$ref": "#/components/schemas/OrderEntry"
          },
          "expectedQuantity": {
            "type": "integer",
            "description": "Quantity which is expected to be returned for this return request entry",
            "format": "int64",
            "example": 5
          },
          "refundAmount": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Representation of a return request entry which contains information about the returned product"
      },
      "NotificationList": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "string"
          },
          "notificationType": {
            "type": "string"
          },
          "alreadyRead": {
            "type": "string"
          },
          "alreadyDeleted": {
            "type": "string"
          },
          "notificationTimeStamp": {
            "type": "string"
          },
          "formattedDate": {
            "type": "string"
          },
          "orderId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationInnerResponse"
            }
          },
          "schemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationInnerResponse"
            }
          },
          "notificationData": {
            "$ref": "#/components/schemas/GeneralNotificationInnerResponse"
          },
          "dealer": {
            "type": "string"
          },
          "dealerName": {
            "type": "string"
          }
        }
      },
      "PickupOrderEntryGroup": {
        "type": "object",
        "properties": {
          "totalPriceWithTax": {
            "$ref": "#/components/schemas/Price"
          },
          "entries": {
            "type": "array",
            "description": "List of order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of order entries in a group",
            "format": "int64"
          },
          "deliveryPointOfService": {
            "$ref": "#/components/schemas/PointOfService"
          },
          "distance": {
            "type": "number",
            "description": "Distance calculated to pickup place",
            "format": "double"
          }
        },
        "description": "Representation of a Pickup Order Entry Group"
      },
      "VendorLines": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "billingDocument": {
            "type": "string"
          },
          "item": {
            "type": "string"
          },
          "deliveryNoteNo": {
            "type": "string"
          },
          "isDocumentAvailable": {
            "type": "boolean"
          }
        }
      },
      "ConsignmentEntry": {
        "type": "object",
        "properties": {
          "orderEntry": {
            "$ref": "#/components/schemas/OrderEntry"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity value of Consignment entry",
            "format": "int64"
          },
          "shippedQuantity": {
            "type": "integer",
            "description": "Shipped quantity",
            "format": "int64"
          }
        },
        "description": "Representation of a Consignment Entry"
      },
      "ProductExpressUpdateElement": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of product express update element"
          },
          "catalogId": {
            "type": "string",
            "description": "Catalog identifier"
          },
          "catalogVersion": {
            "type": "string",
            "description": "Catalog version"
          }
        },
        "description": "Representation of a Product Express Update Element"
      },
      "Region": {
        "type": "object",
        "properties": {
          "isocode": {
            "type": "string",
            "description": "Country and Region code in iso format"
          },
          "isocodeShort": {
            "type": "string",
            "description": "Region code in short iso form"
          },
          "countryIso": {
            "type": "string",
            "description": "Country code in iso format"
          },
          "name": {
            "type": "string",
            "description": "Name of the region"
          }
        },
        "description": "Response body fields which will be returned while fetching the list of country's regions."
      },
      "QuoteAction": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "User's actions with the quote. Typical actions are: CANCEL, SUBMIT, ACCEPT, APPROVE, REJECT.",
            "example": "SUBMIT"
          }
        },
        "description": "The action with the quote. The quote action field is mandatory."
      },
      "PaymentDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of payment detail"
          },
          "accountHolderName": {
            "type": "string",
            "description": "Name of account holder"
          },
          "cardType": {
            "$ref": "#/components/schemas/CardType"
          },
          "cardNumber": {
            "type": "string",
            "description": "Payment card number"
          },
          "startMonth": {
            "type": "string",
            "description": "Start month from which payment is valid"
          },
          "startYear": {
            "type": "string",
            "description": "Start year from which payment is valid"
          },
          "expiryMonth": {
            "type": "string",
            "description": "Month of expiration of payment"
          },
          "expiryYear": {
            "type": "string",
            "description": "Year of expiration of payment"
          },
          "issueNumber": {
            "type": "string",
            "description": "Issue number"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of subscription"
          },
          "saved": {
            "type": "boolean",
            "description": "Flag to mark if payment is saved one"
          },
          "defaultPayment": {
            "type": "boolean",
            "description": "Flag to mark if payment the default one"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "description": "Payment details object"
      },
      "DeliveryModeList": {
        "type": "object",
        "properties": {
          "deliveryModes": {
            "type": "array",
            "description": "List of delivery modes",
            "items": {
              "$ref": "#/components/schemas/DeliveryMode"
            }
          }
        },
        "description": "Representation of a Delivery mode list"
      },
      "Conditional": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "chargeType": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitOfMeasurement": {
            "type": "string"
          },
          "aviationType": {
            "type": "string"
          }
        }
      },
      "ResetPassword": {
        "required": [
          "newPassword",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token value which will be generated as unique string that will be sent with email to allow user for completing reset-password operation"
          },
          "newPassword": {
            "type": "string",
            "description": "new password string which is required to complete process of resetting password"
          }
        },
        "description": "Request body parameter that contains details such as token and new password"
      },
      "B2BUnit": {
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Boolean flag of whether Organizational Unit is active",
            "example": true
          },
          "uid": {
            "type": "string",
            "description": "Identifier of the organizational unit",
            "example": "Pronto"
          },
          "name": {
            "type": "string",
            "description": "Name of the organizational unit",
            "example": "Pronto"
          },
          "parentOrgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "approvalProcess": {
            "$ref": "#/components/schemas/B2BApprovalProcess"
          },
          "addresses": {
            "type": "array",
            "description": "Addresses of the organizational unit node",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "approvers": {
            "type": "array",
            "description": "Approvers of the organizational unit node",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "managers": {
            "type": "array",
            "description": "Managers of the organizational unit node",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "administrators": {
            "type": "array",
            "description": "Administrators of the organizational unit node",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "customers": {
            "type": "array",
            "description": "Customers of the organizational unit node",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "costCenters": {
            "type": "array",
            "description": "The cost centers of the organizational unit node",
            "items": {
              "$ref": "#/components/schemas/B2BCostCenterShallow"
            }
          }
        },
        "description": "Organizational Unit object.",
        "example": "Rustic"
      },
      "FuelProductList": {
        "type": "object",
        "properties": {
          "fuelProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FuelProduct"
            }
          }
        }
      },
      "DataImportResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataImportErrorResponse"
            }
          }
        }
      },
      "pagination": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of elements on this page",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of elements",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "description": "Current page number",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean",
            "description": "Indicates if there is next page"
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Indicates if there is previous page"
          }
        },
        "description": "Pagination info"
      },
      "CastrolIndirectPlaceOrderFormData": {
        "type": "object",
        "properties": {
          "cartId": {
            "type": "string"
          },
          "termsCheck": {
            "type": "boolean"
          },
          "cash": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          }
        },
        "description": "Request body parameter that contains details such as the cart id (cartId), the terms and condition acceptance (termsCheck), the order is cash or not (cash), the comments from customer (comment).\n\nThe DTO is in XML or .json format."
      },
      "PriceData": {
        "type": "object",
        "properties": {
          "currencyIso": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "BUY",
              "FROM"
            ]
          },
          "formattedValue": {
            "type": "string"
          },
          "minQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "maxQuantity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SaveCartResult": {
        "type": "object",
        "properties": {
          "savedCartData": {
            "$ref": "#/components/schemas/Cart"
          }
        },
        "description": "Representation of a Save Cart Result"
      },
      "OrderApprovalPermission": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Boolean flag of whether Order Approval Permission is active",
            "example": true
          },
          "orderApprovalPermissionType": {
            "$ref": "#/components/schemas/OrderApprovalPermissionType"
          },
          "code": {
            "type": "string",
            "description": "Code of the Order Approval Permission",
            "example": "Rustic_10K_USD_MONTH"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "periodRange": {
            "type": "string",
            "description": "Period range of the Order Approval Permission, used for type B2BOrderThresholdTimespanPermission",
            "example": "MONTH",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "QUARTER",
              "YEAR"
            ]
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "threshold": {
            "type": "number",
            "description": "Threshold value of the Order Approval Permission, used for type B2BOrderThresholdPermission and B2BOrderThresholdTimespanPermission",
            "format": "double",
            "example": 10000
          },
          "selected": {
            "type": "boolean",
            "description": "Boolean flag of whether the user is selected",
            "example": true
          }
        },
        "description": "Order Approval Permission object."
      },
      "Time": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "string",
            "description": "Hour part of the time data",
            "format": "byte"
          },
          "minute": {
            "type": "string",
            "description": "Minute part of the time data",
            "format": "byte"
          },
          "formattedHour": {
            "type": "string",
            "description": "Formatted hour"
          }
        },
        "description": "Representation of a Time"
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of review"
          },
          "headline": {
            "type": "string",
            "description": "Review headline"
          },
          "comment": {
            "type": "string",
            "description": "Review comment"
          },
          "rating": {
            "type": "number",
            "description": "Review rating value",
            "format": "double"
          },
          "date": {
            "type": "string",
            "description": "Date of the review",
            "format": "date-time"
          },
          "alias": {
            "type": "string",
            "description": "Alias name for the review"
          },
          "principal": {
            "$ref": "#/components/schemas/User"
          }
        },
        "description": "Object contains review details like : rating, alias, headline, comment"
      },
      "OrderStatusUpdateElementList": {
        "type": "object",
        "properties": {
          "orderStatusUpdateElements": {
            "type": "array",
            "description": "List of order status update elements",
            "items": {
              "$ref": "#/components/schemas/OrderStatusUpdateElement"
            }
          }
        },
        "description": "Representation of an Order Status Update Element List"
      },
      "CastrolProductWsDTOList": {
        "type": "object",
        "properties": {
          "castrolProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolProduct"
            }
          }
        }
      },
      "DisputePaginationAndData": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "disputeResults": {
            "$ref": "#/components/schemas/DisputeWithCode"
          }
        }
      },
      "OrderHistoryList": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "description": "List of order history items",
            "items": {
              "$ref": "#/components/schemas/OrderHistory"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "facets": {
            "type": "array",
            "description": "List of facets",
            "items": {
              "$ref": "#/components/schemas/Facet"
            }
          },
          "castrolFacets": {
            "$ref": "#/components/schemas/CastrolOrderFacet"
          }
        },
        "description": "Representation of an Order History List"
      },
      "B2BCostCenter": {
        "type": "object",
        "properties": {
          "originalCode": {
            "type": "string",
            "description": "The original code of the cost center. Deprecated since 2005.",
            "example": "Custom_Retail",
            "deprecated": true
          },
          "name": {
            "type": "string",
            "description": "The name of the cost center",
            "example": "Custom Retail"
          },
          "active": {
            "type": "string",
            "description": "Indication of whether the cost center is active. Deprecated since 2005. Read-only, used for display purposes.",
            "example": "true",
            "deprecated": true
          },
          "activeFlag": {
            "type": "boolean",
            "description": "Boolean flag of whether the cost center is active.",
            "example": true
          },
          "code": {
            "type": "string",
            "description": "The code of the cost center",
            "example": "Custom_Retail"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "unit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "assignedBudgets": {
            "type": "array",
            "description": "Budgets assigned to this cost center",
            "items": {
              "$ref": "#/components/schemas/BudgetShallow"
            }
          }
        },
        "description": "Cost center object."
      },
      "CastrolOrderFacet": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          },
          "expectedDeliveryDate": {
            "$ref": "#/components/schemas/DateRange"
          },
          "orderedDate": {
            "$ref": "#/components/schemas/DateRange"
          },
          "orderStatusFilterMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "AddressData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "titleCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "town": {
            "type": "string"
          },
          "region": {
            "$ref": "#/components/schemas/RegionData"
          },
          "district": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "cellphone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryData"
          },
          "shippingAddress": {
            "type": "boolean"
          },
          "billingAddress": {
            "type": "boolean"
          },
          "defaultAddress": {
            "type": "boolean"
          },
          "visibleInAddressBook": {
            "type": "boolean"
          },
          "formattedAddress": {
            "type": "string"
          },
          "editable": {
            "type": "boolean"
          },
          "shipToUnit": {
            "type": "string"
          },
          "shipToUnitDetails": {
            "$ref": "#/components/schemas/ShipToUnitDetailsData"
          }
        }
      },
      "CurrencyData": {
        "type": "object",
        "properties": {
          "isocode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "Language": {
        "type": "object",
        "properties": {
          "isocode": {
            "type": "string",
            "description": "iso code of the language"
          },
          "name": {
            "type": "string",
            "description": "name of the language"
          },
          "nativeName": {
            "type": "string",
            "description": "name the language in native form"
          },
          "active": {
            "type": "boolean",
            "description": "true/false indicator when the language is active"
          }
        },
        "description": "Representation of a Language"
      },
      "ReasonCodeList": {
        "type": "object",
        "properties": {
          "codeAndCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndCount"
            }
          }
        }
      },
      "ProductPaginationAndData": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "string"
          },
          "totalValue": {
            "type": "string"
          },
          "productResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationDeliveryProduct"
            }
          }
        }
      },
      "OrgUnitUserGroup": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique user identifier"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "members": {
            "type": "array",
            "description": "List of members",
            "items": {
              "$ref": "#/components/schemas/Principal"
            }
          },
          "subGroups": {
            "type": "array",
            "description": "List of subgroups",
            "items": {
              "$ref": "#/components/schemas/UserGroup"
            }
          },
          "membersCount": {
            "type": "integer",
            "description": "Number of members",
            "format": "int32"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "permissions": {
            "type": "array",
            "description": "Order approval permission of the user group",
            "items": {
              "$ref": "#/components/schemas/OrderApprovalPermission"
            }
          },
          "roles": {
            "type": "array",
            "description": "List of Roles",
            "items": {
              "type": "string",
              "description": "List of Roles"
            }
          },
          "selected": {
            "type": "boolean",
            "description": "Boolean flag of whether a user group is selected or not",
            "example": true
          }
        },
        "description": "Organizational unit user group object."
      },
      "TitleList": {
        "type": "object",
        "properties": {
          "titles": {
            "type": "array",
            "description": "List of titles",
            "items": {
              "$ref": "#/components/schemas/Title"
            }
          }
        },
        "description": "Representation of a Title List"
      },
      "CatalogVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of abstract catalog item"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of abstract catalog item"
          },
          "url": {
            "type": "string",
            "description": "Url address of abstract catalog item"
          },
          "categories": {
            "type": "array",
            "description": "List of category hierarchies",
            "items": {
              "$ref": "#/components/schemas/CategoryHierarchy"
            }
          }
        },
        "description": "Representation of a Catalog Version"
      },
      "CastrolProduct": {
        "type": "object",
        "properties": {
          "productAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "skuCode": {
            "type": "string"
          }
        }
      },
      "FilterCodeAndCount": {
        "type": "object",
        "properties": {
          "disputeLevelCodeCount": {
            "$ref": "#/components/schemas/DisputeLevelList"
          },
          "reasonCodeCount": {
            "$ref": "#/components/schemas/ReasonCodeList"
          },
          "resolutionCategoryCount": {
            "$ref": "#/components/schemas/ResolutionCategoryList"
          },
          "disputeStatusCount": {
            "$ref": "#/components/schemas/DisputeStatusList"
          }
        }
      },
      "CEDDiscount": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "OrgCustomerModification": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "akiro.nakamura@rustic-hw.com"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user",
            "example": "Akiro"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user",
            "example": "Nakamura"
          },
          "titleCode": {
            "type": "string",
            "description": "Code of the user's title",
            "example": "mr"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "roles": {
            "type": "array",
            "description": "List of organizational approvers",
            "items": {
              "type": "string",
              "description": "List of organizational approvers"
            }
          },
          "active": {
            "type": "boolean",
            "description": "Boolean flag of whether the user is active/enabled or not",
            "example": true
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          }
        },
        "description": "Data object which contains information necessary for user modification"
      },
      "DealerNotificationDTO": {
        "type": "object",
        "properties": {
          "authenticationKey": {
            "type": "string"
          },
          "pushSubscriptionKey": {
            "type": "string"
          },
          "subscriberEndpoint": {
            "type": "string"
          },
          "salesforceId": {
            "type": "string"
          }
        }
      },
      "OrderApprovalList": {
        "required": [
          "orderApprovals",
          "pagination",
          "sorts"
        ],
        "type": "object",
        "properties": {
          "orderApprovals": {
            "type": "array",
            "description": "List of Order Approvals",
            "items": {
              "$ref": "#/components/schemas/OrderApproval"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of a Order Approval List"
      },
      "SAPSalesOrganization": {
        "type": "object",
        "properties": {
          "salesOrganization": {
            "type": "string"
          },
          "distributionChannel": {
            "type": "string"
          },
          "division": {
            "type": "string"
          }
        }
      },
      "OrderApprovalPermissionResult": {
        "type": "object",
        "properties": {
          "approverName": {
            "type": "string",
            "description": "Name of the approver responsible for this permission result."
          },
          "approverNotes": {
            "type": "string",
            "description": "Any comments the approver added to the approval item.",
            "example": "The order is rejected due to insufficient budget"
          },
          "permissionType": {
            "$ref": "#/components/schemas/OrderApprovalPermissionType"
          },
          "statusDisplay": {
            "type": "string",
            "description": "Status of the order approval.",
            "example": "Pending approval"
          }
        },
        "description": "Details of an order approval permission result related to an order"
      },
      "ProductReferenceList": {
        "type": "object",
        "properties": {
          "references": {
            "type": "array",
            "description": "List of product references",
            "items": {
              "$ref": "#/components/schemas/ProductReference"
            }
          }
        },
        "description": "Representation of a Product Reference List"
      },
      "AviationInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "base64Pdf": {
            "type": "string"
          }
        }
      },
      "ProductReference": {
        "type": "object",
        "properties": {
          "referenceType": {
            "type": "string",
            "description": "Reference type"
          },
          "description": {
            "type": "string",
            "description": "Reference description"
          },
          "quantity": {
            "type": "integer",
            "description": "Reference quantity",
            "format": "int32"
          },
          "target": {
            "$ref": "#/components/schemas/Product"
          },
          "preselected": {
            "type": "boolean",
            "description": "Flag stating if product reference is preselected"
          }
        },
        "description": "Representation of a Product Reference"
      },
      "BaseSite": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique identifier of Basesite"
          },
          "name": {
            "type": "string",
            "description": "Name of Basesite"
          },
          "stores": {
            "type": "array",
            "description": "List of Basestores",
            "items": {
              "$ref": "#/components/schemas/BaseStore"
            }
          },
          "theme": {
            "type": "string",
            "description": "Theme of Basesite"
          },
          "defaultLanguage": {
            "$ref": "#/components/schemas/Language"
          },
          "locale": {
            "type": "string",
            "description": "Locale data for Basesite"
          },
          "channel": {
            "type": "string",
            "description": "Channel"
          },
          "urlEncodingAttributes": {
            "type": "array",
            "description": "List of url encoding attributes",
            "items": {
              "type": "string",
              "description": "List of url encoding attributes"
            }
          },
          "urlPatterns": {
            "type": "array",
            "description": "List of url patterns",
            "items": {
              "type": "string",
              "description": "List of url patterns"
            }
          },
          "defaultPreviewCatalogId": {
            "type": "string",
            "description": "Default preview catalog id"
          },
          "defaultPreviewCategoryCode": {
            "type": "string",
            "description": "Default preview category code"
          },
          "defaultPreviewProductCode": {
            "type": "string",
            "description": "Default preview product code"
          },
          "isolated": {
            "type": "boolean",
            "description": "Indicates whether customer data isolation is enabled for this site. If true, customer can get site information after registration, For example registerd username is name@sap.com, returned uid will be name@sap.com|baseSiteUid"
          },
          "captchaConfig": {
            "$ref": "#/components/schemas/CaptchaConfig"
          },
          "registrationEnabled": {
            "type": "boolean",
            "description": "Indicates if the website supports registration",
            "example": true
          },
          "requiresAuthentication": {
            "type": "boolean",
            "description": "Indicates if the BaseSite requires authentication prior to use it",
            "example": true
          }
        },
        "description": "Representation of a Base Site"
      },
      "CEDSurcharge": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Title": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Title code"
          },
          "name": {
            "type": "string",
            "description": "Title name"
          }
        },
        "description": "Representation of a Title"
      },
      "Breadcrumb": {
        "type": "object",
        "properties": {
          "facetCode": {
            "type": "string",
            "description": "Code of the facet"
          },
          "facetName": {
            "type": "string",
            "description": "Name of the facet"
          },
          "facetValueCode": {
            "type": "string",
            "description": "Value code of the facet"
          },
          "facetValueName": {
            "type": "string",
            "description": "Value name of the facet"
          },
          "removeQuery": {
            "$ref": "#/components/schemas/SearchState"
          },
          "truncateQuery": {
            "$ref": "#/components/schemas/SearchState"
          }
        },
        "description": "Representation of a Breadcrumb"
      },
      "PointOfServiceStock": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the point of service",
            "example": "Misato"
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the point of service"
          },
          "url": {
            "type": "string",
            "description": "Url address of the point of service"
          },
          "description": {
            "type": "string",
            "description": "Description of the point of service"
          },
          "openingHours": {
            "$ref": "#/components/schemas/OpeningSchedule"
          },
          "storeContent": {
            "type": "string",
            "description": "Store content of given point of service"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "List of features for a given point of service"
            },
            "description": "List of features for a given point of service"
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "formattedDistance": {
            "type": "string",
            "description": "Distance to the point of service as text value"
          },
          "distanceKm": {
            "type": "number",
            "description": "Distance to the point of service as number value",
            "format": "double"
          },
          "mapIcon": {
            "$ref": "#/components/schemas/Image"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "storeImages": {
            "type": "array",
            "description": "Collection of images associated with a point of service",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "pickUpInStoreInstructions": {
            "type": "string",
            "description": "Instructions used for picking up an order in store"
          },
          "stockInfo": {
            "$ref": "#/components/schemas/Stock"
          }
        },
        "description": "Representation of a Point Of Service Stock"
      },
      "OrgUnitReference": {
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Identifier of the organizational unit.",
            "example": "Pronto"
          },
          "name": {
            "type": "string",
            "description": "Name of the organizational unit.",
            "example": "Pronto"
          }
        },
        "description": "Reference to organizational unit."
      },
      "AviationGetFuelOrderInfo": {
        "type": "object",
        "properties": {
          "iata": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "icao": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "sapId": {
            "type": "string"
          },
          "upliftVolume": {
            "type": "string"
          },
          "checkRefueling": {
            "type": "boolean"
          },
          "refuelingDateOfDeparture": {
            "type": "string"
          },
          "refuelingTimeOfDeparture": {
            "type": "string"
          },
          "airportName": {
            "type": "string"
          },
          "deliveryPointUid": {
            "type": "string"
          },
          "isFlightOperator": {
            "type": "boolean"
          },
          "operatorName": {
            "type": "string"
          },
          "customerEmail": {
            "type": "string"
          },
          "additionalEmail5": {
            "type": "string"
          },
          "additionalEmail3": {
            "type": "string"
          },
          "additionalEmail4": {
            "type": "string"
          },
          "additionalEmail2": {
            "type": "string"
          },
          "additionalEmail1": {
            "type": "string"
          },
          "dateOfDeparture": {
            "type": "string"
          },
          "timeOfDeparture": {
            "type": "string"
          },
          "additionalNotes": {
            "type": "string"
          },
          "deliveryArea": {
            "type": "string"
          },
          "userGRN": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "fuelProvider": {
            "type": "string"
          },
          "checkVolume": {
            "type": "boolean"
          },
          "timeZone": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "dateOfArrival": {
            "type": "string"
          },
          "timeOfArrival": {
            "type": "string"
          },
          "aircraftType": {
            "type": "string"
          },
          "fuelType": {
            "type": "string"
          },
          "registerNumber": {
            "type": "string"
          },
          "flightNumber": {
            "type": "string"
          },
          "nextDestination": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "refuelingDate": {
            "type": "string",
            "format": "date-time"
          },
          "departureDate": {
            "type": "string",
            "format": "date-time"
          },
          "isPast": {
            "type": "boolean"
          },
          "pricingDifferential": {
            "type": "string"
          },
          "pricingDescription": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "isBandPrice": {
            "type": "boolean"
          },
          "validUntil": {
            "type": "string"
          },
          "emailId": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pricingUOM": {
            "type": "string"
          },
          "pricingCurrency": {
            "type": "string"
          }
        }
      },
      "Quote": {
        "required": [
          "code",
          "creationTime",
          "expirationTime",
          "name",
          "state",
          "threshold",
          "totalItems",
          "updatedTime",
          "version"
        ],
        "type": "object",
        "properties": {
          "expirationTime": {
            "type": "string",
            "description": "Expiration time of the quote.",
            "format": "date-time"
          },
          "code": {
            "type": "string",
            "description": "Code of the quote.",
            "example": "0003005"
          },
          "name": {
            "type": "string",
            "description": "Name of the quote.",
            "example": "Quote 0003005"
          },
          "state": {
            "type": "string",
            "description": "Current state of the quote. Possible state values - DRAFT, SUBMITTED, OFFER, CANCELLED, EXPIRED, etc.. The list of the states can be extended.",
            "example": "CANCELLED"
          },
          "description": {
            "type": "string",
            "description": "Description of the quote.",
            "example": "Quote description"
          },
          "version": {
            "type": "integer",
            "description": "Current version of the quote.",
            "format": "int32",
            "example": 1
          },
          "threshold": {
            "type": "number",
            "description": "Minimum subtotal value for the quote in the currency of the store.",
            "format": "double",
            "example": 25000
          },
          "cartId": {
            "type": "string",
            "description": "Id of the cart, which is linked to the quote.",
            "example": "000350"
          },
          "creationTime": {
            "type": "string",
            "description": "Date of quote creation.",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "description": "Date of the last quote update.",
            "format": "date-time"
          },
          "allowedActions": {
            "type": "array",
            "description": "Actions, which are allowed to perform with the quote.",
            "items": {
              "type": "string",
              "description": "Actions, which are allowed to perform with the quote."
            }
          },
          "previousEstimatedTotal": {
            "$ref": "#/components/schemas/Price"
          },
          "comments": {
            "type": "array",
            "description": "List of quote comments.",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "totalPriceWithTax": {
            "$ref": "#/components/schemas/Price"
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "entries": {
            "type": "array",
            "description": "Entries of the cart.",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of the items in the quote.",
            "format": "int32",
            "example": 2
          },
          "quoteDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "orderDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "subTotalWithDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "productDiscounts": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Representation of the quote object."
      },
      "ReturnRequestModification": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the return request",
            "enum": [
              "CANCELLING"
            ]
          }
        },
        "description": "Return request modification object."
      },
      "OrgUnitUserGroupList": {
        "required": [
          "orgUnitUserGroups",
          "pagination",
          "sorts"
        ],
        "type": "object",
        "properties": {
          "orgUnitUserGroups": {
            "type": "array",
            "description": "List of organizational unit user groups",
            "items": {
              "$ref": "#/components/schemas/OrgUnitUserGroup"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of an user list used in organizational units"
      },
      "VariantMatrixElement": {
        "type": "object",
        "properties": {
          "variantValueCategory": {
            "$ref": "#/components/schemas/VariantValueCategory"
          },
          "parentVariantCategory": {
            "$ref": "#/components/schemas/VariantCategory"
          },
          "variantOption": {
            "$ref": "#/components/schemas/VariantOption"
          },
          "elements": {
            "type": "array",
            "description": "List of elements with the type of variant matrix element",
            "items": {
              "$ref": "#/components/schemas/VariantMatrixElement"
            }
          },
          "isLeaf": {
            "type": "boolean"
          }
        },
        "description": "Representation of a Variant Matrix Element"
      },
      "VariantValueCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the variant value category"
          },
          "sequence": {
            "type": "integer",
            "description": "Sequence number of variant value category",
            "format": "int32"
          },
          "superCategories": {
            "type": "array",
            "description": "Parent category of variant value category",
            "items": {
              "$ref": "#/components/schemas/VariantCategory"
            }
          }
        },
        "description": "Representation of a Variant Value Category"
      },
      "BaseStore": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Base store name"
          },
          "externalTaxEnabled": {
            "type": "boolean",
            "description": "Flag defining is external tax is enabled"
          },
          "paymentProvider": {
            "type": "string",
            "description": "Payment provider"
          },
          "createReturnProcessCode": {
            "type": "string",
            "description": "Create return process code"
          },
          "maxRadiusForPosSearch": {
            "type": "number",
            "description": "Maximum radius for searching point of service",
            "format": "double"
          },
          "submitOrderProcessCode": {
            "type": "string",
            "description": "Submit order process code"
          },
          "currencies": {
            "type": "array",
            "description": "List of currencies",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "defaultCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "defaultDeliveryOrigin": {
            "$ref": "#/components/schemas/PointOfService"
          },
          "defaultLanguage": {
            "$ref": "#/components/schemas/Language"
          },
          "deliveryCountries": {
            "type": "array",
            "description": "List of delivery countries",
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          },
          "deliveryModes": {
            "$ref": "#/components/schemas/DeliveryModeList"
          },
          "languages": {
            "type": "array",
            "description": "List of languages",
            "items": {
              "$ref": "#/components/schemas/Language"
            }
          },
          "pointsOfService": {
            "type": "array",
            "description": "List of points of service",
            "items": {
              "$ref": "#/components/schemas/PointOfService"
            }
          },
          "expressCheckoutEnabled": {
            "type": "boolean",
            "description": "Flag specifying whether the express checkout option is enabled"
          }
        },
        "description": "Representation of a Base Store"
      },
      "StoreCount": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of store count"
          },
          "name": {
            "type": "string",
            "description": "Name of store count"
          },
          "isoCode": {
            "type": "string",
            "description": "Iso code of store"
          },
          "count": {
            "type": "integer",
            "description": "Count",
            "format": "int32"
          },
          "storeCountDataList": {
            "type": "array",
            "description": "List of store counts",
            "items": {
              "$ref": "#/components/schemas/StoreCount"
            }
          }
        },
        "description": "Representation of a Store Count"
      },
      "ProductSearchPage": {
        "type": "object",
        "properties": {
          "freeTextSearch": {
            "type": "string",
            "description": "Free text search"
          },
          "categoryCode": {
            "type": "string",
            "description": "Code of category"
          },
          "keywordRedirectUrl": {
            "type": "string",
            "description": "Redirect url address keyword"
          },
          "spellingSuggestion": {
            "$ref": "#/components/schemas/SpellingSuggestion"
          },
          "products": {
            "type": "array",
            "description": "List of products",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "currentQuery": {
            "$ref": "#/components/schemas/SearchState"
          },
          "breadcrumbs": {
            "type": "array",
            "description": "List of breadcrumbs info",
            "items": {
              "$ref": "#/components/schemas/Breadcrumb"
            }
          },
          "facets": {
            "type": "array",
            "description": "List of facets",
            "items": {
              "$ref": "#/components/schemas/Facet"
            }
          },
          "skuCountResult": {
            "$ref": "#/components/schemas/SkuCountResult"
          }
        },
        "description": "Representation of a Product Search Page"
      },
      "RegionData": {
        "type": "object",
        "properties": {
          "isocode": {
            "type": "string"
          },
          "isocodeShort": {
            "type": "string"
          },
          "countryIso": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Allocation": {
        "type": "object",
        "properties": {
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "deliveryNumber": {
            "type": "string"
          }
        }
      },
      "NextGenAmendOrder": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/NextGenError"
          },
          "data": {
            "$ref": "#/components/schemas/Order"
          }
        }
      },
      "ReturnRequestList": {
        "type": "object",
        "properties": {
          "returnRequests": {
            "type": "array",
            "description": "List of order return requests",
            "items": {
              "$ref": "#/components/schemas/ReturnRequest"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of an Order Return Request List"
      },
      "Address": {
        "required": [
          "firstName",
          "lastName",
          "line1",
          "postalCode",
          "titleCode",
          "town"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id value of the address which is optional while creating new address. While performing other address operations this value is the key"
          },
          "title": {
            "type": "string",
            "description": "Title of the address person"
          },
          "titleCode": {
            "type": "string",
            "description": "Code of the title"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the address person"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the address person"
          },
          "companyName": {
            "type": "string",
            "description": "Company Name"
          },
          "line1": {
            "type": "string",
            "description": "First line of the address"
          },
          "line2": {
            "type": "string",
            "description": "Second line of the address"
          },
          "town": {
            "type": "string",
            "description": "Town, field required"
          },
          "region": {
            "$ref": "#/components/schemas/Region"
          },
          "district": {
            "type": "string",
            "description": "District name"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code of the address"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "cellphone": {
            "type": "string",
            "description": "Cellphone number"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "shippingAddress": {
            "type": "boolean",
            "description": "Boolean flag if address is for shipping"
          },
          "defaultAddress": {
            "type": "boolean",
            "description": "Boolean flag if address is default"
          },
          "visibleInAddressBook": {
            "type": "boolean",
            "description": "Boolean flag if address is visible in the Address Book"
          },
          "formattedAddress": {
            "type": "string",
            "description": "Boolean flag if address is formatted"
          },
          "locationId": {
            "type": "string"
          },
          "shipToUnitDetails": {
            "$ref": "#/components/schemas/ShipToUnitDetails"
          }
        },
        "description": "Address object"
      },
      "OpeningSchedule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the opening schedule"
          },
          "code": {
            "type": "string",
            "description": "Code of the opening schedule"
          },
          "weekDayOpeningList": {
            "type": "array",
            "description": "List of weekday opening days",
            "items": {
              "$ref": "#/components/schemas/WeekdayOpeningDay"
            }
          },
          "specialDayOpeningList": {
            "type": "array",
            "description": "List of special opening days",
            "items": {
              "$ref": "#/components/schemas/SpecialOpeningDay"
            }
          }
        },
        "description": "Representation of an Opening schedule"
      },
      "CancellationRequestEntryInputList": {
        "required": [
          "cancellationRequestEntryInputs"
        ],
        "type": "object",
        "properties": {
          "cancellationRequestEntryInputs": {
            "type": "array",
            "description": "Cancellation request entry inputs which contain information about the order entries which are requested to be cancelled",
            "items": {
              "$ref": "#/components/schemas/CancellationRequestEntryInput"
            }
          }
        },
        "description": "Cancellation request input list for the current order."
      },
      "AviationInvoice": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "grnNumber": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "aircraftId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "invoiceId": {
            "type": "string"
          },
          "collectorsId": {
            "type": "string"
          },
          "collectorsName": {
            "type": "string"
          },
          "outstandingBalance": {
            "type": "string"
          },
          "originalVal": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "deliveryId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disputeStatuses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "invoiceStatus": {
            "type": "string"
          },
          "inDispute": {
            "type": "boolean"
          },
          "date": {
            "type": "string"
          },
          "dueDate": {
            "type": "string"
          },
          "totalValueProd": {
            "type": "string"
          },
          "totalCharges": {
            "type": "string"
          },
          "isPdfAvailable": {
            "type": "boolean"
          }
        }
      },
      "InvoicePaginationAndData": {
        "type": "object",
        "properties": {
          "codeAndCount": {
            "$ref": "#/components/schemas/InvoiceFilterCodeAndCount"
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "invoiceResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationInvoice"
            }
          }
        }
      },
      "NextGenWishlist2Entry": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "comment": {
            "type": "string"
          },
          "addedDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "imageType": {
            "type": "string",
            "description": "Type of the image, can be PRIMARY or GALLERY",
            "enum": [
              "PRIMARY",
              "GALLERY"
            ]
          },
          "format": {
            "type": "string",
            "description": "Format of the image, can be zoom, product, thumbnail, store, cartIcon, etc."
          },
          "url": {
            "type": "string",
            "description": "URL address of the image"
          },
          "altText": {
            "type": "string",
            "description": "Tooltip content which is visible while image mouse hovering"
          },
          "galleryIndex": {
            "type": "integer",
            "description": "Index of the image while displayed in gallery",
            "format": "int32"
          }
        },
        "description": "Representation of an Image"
      },
      "UserGroup": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique user identifier"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "members": {
            "type": "array",
            "description": "List of members",
            "items": {
              "$ref": "#/components/schemas/Principal"
            }
          },
          "membersCount": {
            "type": "integer",
            "description": "Number of members",
            "format": "int32"
          }
        },
        "description": "User group object with id and name."
      },
      "DeliveryOrderEntryGroup": {
        "type": "object",
        "properties": {
          "totalPriceWithTax": {
            "$ref": "#/components/schemas/Price"
          },
          "entries": {
            "type": "array",
            "description": "List of order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of order entries in a group",
            "format": "int64"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "description": "Representation of a Delivery Order Entry Group"
      },
      "ProductFutureStocks": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Product identifier",
            "example": "3318057"
          },
          "futureStocks": {
            "type": "array",
            "description": "List of future stocks",
            "items": {
              "$ref": "#/components/schemas/FutureStock"
            }
          }
        },
        "description": "Representation of a Product Future Stocks"
      },
      "OrgDocumentList": {
        "required": [
          "orgDocuments",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "orgDocuments": {
            "type": "array",
            "description": "List of organizational documents.",
            "items": {
              "$ref": "#/components/schemas/OrgDocument"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sort codes",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "orgDocumentTypes": {
            "type": "array",
            "description": "List of organizational document types.",
            "items": {
              "$ref": "#/components/schemas/OrgDocumentType"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of a list of organizational documents for the organizational unit."
      },
      "Classification": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the classification"
          },
          "name": {
            "type": "string",
            "description": "Name of the classification"
          },
          "features": {
            "type": "array",
            "description": "List of features for given classification",
            "items": {
              "$ref": "#/components/schemas/Feature"
            }
          }
        },
        "description": "Representation of a Classification"
      },
      "EntryGroup": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "description": "List of order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "entryGroups": {
            "type": "array",
            "description": "List of child entry groups",
            "items": {
              "$ref": "#/components/schemas/EntryGroup"
            }
          },
          "entryGroupNumber": {
            "type": "integer",
            "description": "Identifier of the entry group",
            "format": "int32",
            "example": 1
          },
          "label": {
            "type": "string",
            "description": "Label for the entry group",
            "example": "Photo On The Go Package"
          },
          "erroneous": {
            "type": "boolean",
            "description": "Indicates if the entry group is in an error state",
            "example": true
          },
          "type": {
            "type": "string",
            "description": "Indicates type of the group, possible values are STANDALONE, CONFIGURABLEBUNDLE or any customer implemented type for any new provider",
            "example": "STANDALONE"
          }
        },
        "description": "Representation of an Entry Group"
      },
      "DayRange": {
        "required": [
          "minBoundary"
        ],
        "type": "object",
        "properties": {
          "minBoundary": {
            "type": "integer",
            "description": "Minimum day range.",
            "format": "int32",
            "example": 31
          },
          "maxBoundary": {
            "type": "integer",
            "description": "Maximum day range. The value null is used for infinite ranges. For example, a minBoundary of 91 and a maxBoundary of null represents a 91+ day range.",
            "format": "int32",
            "example": 60
          }
        },
        "description": "Maximum and minimum limits of the day range."
      },
      "NextGenInvoice": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string"
          },
          "orderNumber": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "billingDocDate": {
            "type": "string",
            "format": "date-time"
          },
          "documentType": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number"
          },
          "currencyIso": {
            "type": "string"
          },
          "ordersInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenInvoiceOrderInformation"
            }
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "saleOrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "modeOfPayment": {
            "type": "string"
          },
          "paymentTerms": {
            "type": "string"
          },
          "subtotalInvoice": {
            "type": "number",
            "format": "double"
          },
          "totalInvoiceTax": {
            "type": "number",
            "format": "double"
          },
          "invoiceStatus": {
            "type": "string"
          },
          "invoiceEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenInvoiceEntry"
            }
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceFormattedDate": {
            "type": "string"
          },
          "customerPID": {
            "type": "string"
          },
          "customerPANNo": {
            "type": "string"
          },
          "customerAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "aadhar": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "retailerCode": {
            "type": "string"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "dealerNumber": {
            "type": "string"
          },
          "distributorGSTNNo": {
            "type": "string"
          },
          "distributorPANNo": {
            "type": "string"
          },
          "customerGSTNNo": {
            "type": "string"
          },
          "totalInvoicePrice": {
            "type": "number",
            "format": "double"
          },
          "totalAdjustedAmount": {
            "type": "number",
            "format": "double"
          },
          "amountPayable": {
            "type": "number",
            "format": "double"
          },
          "retailerName": {
            "type": "string"
          },
          "amountPayableWords": {
            "type": "string"
          },
          "parentCompany": {
            "type": "string"
          },
          "creditAdjustment": {
            "type": "number",
            "format": "double"
          },
          "schemeBenefit": {
            "type": "number",
            "format": "double"
          },
          "otherDiscount": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "orderVolumeMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "hybrisOrderNumber": {
            "type": "string"
          },
          "totalAmountForFacet": {
            "type": "number"
          },
          "qrCode": {
            "type": "string"
          },
          "paymentQR": {
            "type": "string"
          },
          "irnNo": {
            "type": "string"
          },
          "acknowledgement": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReturnRequest": {
        "type": "object",
        "properties": {
          "cancellable": {
            "type": "boolean",
            "description": "Boolean flag for whether the return request is cancellable",
            "example": true
          },
          "code": {
            "type": "string",
            "description": "Return request code",
            "example": "00000001"
          },
          "creationTime": {
            "type": "string",
            "description": "Date of the return request creation",
            "format": "date-time"
          },
          "deliveryCost": {
            "$ref": "#/components/schemas/Price"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "refundDeliveryCost": {
            "type": "boolean",
            "description": "Boolean flag for whether there is a delivery cost for refund",
            "example": false
          },
          "returnEntries": {
            "type": "array",
            "description": "Entries of the return request which contains information about the returned product",
            "items": {
              "$ref": "#/components/schemas/ReturnRequestEntry"
            }
          },
          "returnLabelDownloadUrl": {
            "type": "string",
            "description": "URL of the return label"
          },
          "rma": {
            "type": "string",
            "description": "Return merchandise authorization number",
            "example": "00000001"
          },
          "status": {
            "type": "string",
            "description": "Status of return request"
          },
          "subTotal": {
            "$ref": "#/components/schemas/Price"
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Representation of a return request for an order"
      },
      "CountryData": {
        "type": "object",
        "properties": {
          "isocode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CastrolIndirectSlabEntry": {
        "type": "object",
        "properties": {
          "schemeCode": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "payout": {
            "type": "number",
            "format": "double"
          },
          "minVolume": {
            "type": "integer",
            "format": "int32"
          },
          "maxVolume": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AviationSearchSaveOfferByFuelGradeResponse": {
        "type": "object",
        "properties": {
          "fuelGrade": {
            "type": "string"
          }
        }
      },
      "AviationLocationDeliveryPoint": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "avIATA": {
            "type": "string"
          },
          "avICAO": {
            "type": "string"
          },
          "isJP8": {
            "type": "string"
          },
          "deliveryPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationDeliveryPoints"
            }
          }
        }
      },
      "LanguageList": {
        "type": "object",
        "properties": {
          "languages": {
            "type": "array",
            "description": "This is the list of Language fields that should be returned in the response body",
            "items": {
              "$ref": "#/components/schemas/Language"
            }
          }
        },
        "description": "Lists all available languages (all languages used for a particular store). If the list of languages for a base store is empty, a list of all languages available in the system will be returned"
      },
      "B2BPaymentType": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "FilterPreset": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "SearchState": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url address of search state"
          },
          "query": {
            "$ref": "#/components/schemas/SearchQuery"
          }
        },
        "description": "Representation of a Search State"
      },
      "GeneralNotificationInnerResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "isocode": {
            "type": "string",
            "description": "Country code in iso format"
          },
          "name": {
            "type": "string",
            "description": "Name of the country"
          }
        },
        "description": "Response body fields which will be returned while fetching the list of countries. The DTO is in XML or .json format"
      },
      "CodeAndCount": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "count": {
            "type": "string"
          }
        }
      },
      "PaymentModeList": {
        "type": "object",
        "properties": {
          "paymentModes": {
            "type": "array",
            "description": "List of payment modes",
            "items": {
              "$ref": "#/components/schemas/PaymentMode"
            }
          }
        },
        "description": "Representation of a Payment Mode List"
      },
      "DueBalanceRange": {
        "type": "object",
        "properties": {
          "dayRange": {
            "$ref": "#/components/schemas/DayRange"
          },
          "amount": {
            "type": "string",
            "description": "Amount due in the specified range.",
            "example": "$300.00"
          }
        },
        "description": "Amount due in the specified day range."
      },
      "PaymentMode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Payment mode code"
          },
          "name": {
            "type": "string",
            "description": "Payment mode name"
          },
          "description": {
            "type": "string",
            "description": "Payment mode description"
          }
        },
        "description": "Representation of a Payment Mode"
      },
      "DeliveryPaginationAndData": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "deliveryResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationDelivery"
            }
          }
        }
      },
      "B2BUnitNodeList": {
        "required": [
          "unitNodes"
        ],
        "type": "object",
        "properties": {
          "unitNodes": {
            "type": "array",
            "description": "List of Unit Nodes",
            "items": {
              "$ref": "#/components/schemas/B2BUnitNode"
            }
          }
        },
        "description": "Representation of an organizational unit node list"
      },
      "OrderApproval": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code that identifies the approval.",
            "example": "00000005"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "approvalDecisionRequired": {
            "type": "boolean",
            "description": "Boolean flag which states whether an approval decision is required."
          },
          "customerOrderApprovalRecords": {
            "type": "array",
            "description": "Customer approval records related to this order approval.",
            "items": {
              "$ref": "#/components/schemas/OrderApprovalRecord"
            }
          },
          "merchantOrderApprovalRecords": {
            "type": "array",
            "description": "Merchant approval records related to this order approval.",
            "items": {
              "$ref": "#/components/schemas/OrderApprovalRecord"
            }
          },
          "trigger": {
            "$ref": "#/components/schemas/Trigger"
          }
        },
        "description": "Details of one specific order approval"
      },
      "VariantOption": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the variant option"
          },
          "stock": {
            "$ref": "#/components/schemas/Stock"
          },
          "url": {
            "type": "string",
            "description": "Url address of the variant option"
          },
          "priceData": {
            "$ref": "#/components/schemas/Price"
          },
          "variantOptionQualifiers": {
            "type": "array",
            "description": "List of variant option qualifiers",
            "items": {
              "$ref": "#/components/schemas/VariantOptionQualifier"
            }
          },
          "classificationData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Classification"
            }
          },
          "pname": {
            "type": "string"
          },
          "manufacturerName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "skuCode": {
            "type": "string"
          },
          "imageData": {
            "type": "array",
            "description": "List of images linked to product",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "plantAvailabilityStatus": {
            "$ref": "#/components/schemas/CastrolPlantAndStatusData"
          }
        },
        "description": "Representation of a Variant Option"
      },
      "OrderApprovalPermissionType": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the Order Approval Permission Type",
            "example": "B2BOrderThresholdTimespanPermission"
          },
          "name": {
            "type": "string",
            "description": "Name of the Order Approval Permission Type",
            "example": "Allowed Order Threshold (per timespan)"
          }
        },
        "description": "Request body fields required and optional to operate on Order Approval Permission Type data. Typical permission types are: B2BBudgetExceededPermission, B2BOrderThresholdTimespanPermission and B2BOrderThresholdPermission"
      },
      "AviationDeliveryProduct": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "deliveryId": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "priceUOM": {
            "type": "string"
          },
          "priceCurrency": {
            "type": "string"
          },
          "qtyDelivered": {
            "type": "string"
          },
          "qtyDeliveredUOM": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "string"
          },
          "totalValue": {
            "type": "string"
          },
          "totalValueCurrency": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "DisputeStatusList": {
        "type": "object",
        "properties": {
          "codeAndCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndCount"
            }
          }
        }
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the promotion"
          },
          "title": {
            "type": "string",
            "description": "Promotion title"
          },
          "promotionType": {
            "type": "string",
            "description": "Type of the promotion"
          },
          "startDate": {
            "type": "string",
            "description": "The initial date of the promotion",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Last date of validity of the promotion",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description of the promotion"
          },
          "couldFireMessages": {
            "type": "array",
            "description": "Message about promotion which is displayed when planning potential promotion. This field has higher priority over promotion description",
            "items": {
              "type": "string",
              "description": "Message about promotion which is displayed when planning potential promotion. This field has higher priority over promotion description"
            }
          },
          "firedMessages": {
            "type": "array",
            "description": "Message fired while the promotion is active. This is info how much you will get when applying the promotion",
            "items": {
              "type": "string",
              "description": "Message fired while the promotion is active. This is info how much you will get when applying the promotion"
            }
          },
          "productBanner": {
            "$ref": "#/components/schemas/Image"
          },
          "enabled": {
            "type": "boolean",
            "description": "Boolean flag if promotion is enabled"
          },
          "priority": {
            "type": "integer",
            "description": "Priority index as numeric value of the promotion. Higher number means higher priority",
            "format": "int32"
          },
          "promotionGroup": {
            "type": "string",
            "description": "Group of the promotion"
          },
          "restrictions": {
            "type": "array",
            "description": "List of promotion restrictions",
            "items": {
              "$ref": "#/components/schemas/PromotionRestriction"
            }
          },
          "unitMeasure": {
            "type": "string"
          },
          "numberOfLitersToBeApplied": {
            "type": "number",
            "format": "double"
          },
          "fixedAmount": {
            "type": "number",
            "format": "double"
          },
          "formattedValueFixedAmount": {
            "type": "string"
          },
          "fixedAmountPerCarton": {
            "type": "number",
            "format": "double"
          },
          "formattedValueFixedAmountPerCarton": {
            "type": "string"
          }
        },
        "description": "Representation of a Promotion"
      },
      "PriceRange": {
        "type": "object",
        "properties": {
          "maxPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "minPrice": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Representation of a Price Range"
      },
      "OrgCustomerCreation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "akiro.nakamura@rustic-hw.com"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user",
            "example": "Akiro"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user",
            "example": "Nakamura"
          },
          "titleCode": {
            "type": "string",
            "description": "Code of the user's title",
            "example": "mr"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "roles": {
            "type": "array",
            "description": "List of organizational approvers",
            "items": {
              "type": "string",
              "description": "List of organizational approvers"
            }
          }
        },
        "description": "Data object that contains information necessary for user creation"
      },
      "DisputeLevelList": {
        "type": "object",
        "properties": {
          "codeAndCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndCount"
            }
          }
        }
      },
      "OpenDisputePaginationAndData": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "disputeResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationDispute"
            }
          }
        }
      },
      "B2BSelectionData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the selected object",
            "example": "Retail_2K"
          },
          "selected": {
            "type": "boolean",
            "description": "If the this object was selected",
            "example": true
          },
          "active": {
            "type": "boolean",
            "description": "If this object is active",
            "example": false
          },
          "roles": {
            "type": "array",
            "description": "roles",
            "items": {
              "type": "string",
              "description": "roles"
            }
          },
          "displayRoles": {
            "type": "array",
            "description": "display roles",
            "items": {
              "type": "string",
              "description": "display roles"
            }
          },
          "normalizedCode": {
            "type": "string",
            "description": "The normalized code"
          }
        },
        "description": "Representation of object selection data"
      },
      "AviationGetFuelOrderResponse": {
        "type": "object",
        "properties": {
          "refNo": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "createdTime": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "updatedTime": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "info": {
            "$ref": "#/components/schemas/AviationGetFuelOrderInfo"
          }
        }
      },
      "CardTypeList": {
        "type": "object",
        "properties": {
          "cardTypes": {
            "type": "array",
            "description": "List of card types",
            "items": {
              "$ref": "#/components/schemas/CardType"
            }
          }
        },
        "description": "Representation of a Card Type List"
      },
      "Cart": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code number of order"
          },
          "net": {
            "type": "boolean",
            "description": "Flag stating iv value is net-value"
          },
          "totalPriceWithTax": {
            "$ref": "#/components/schemas/Price"
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "totalTax": {
            "$ref": "#/components/schemas/Price"
          },
          "subTotal": {
            "$ref": "#/components/schemas/Price"
          },
          "deliveryCost": {
            "$ref": "#/components/schemas/Price"
          },
          "entries": {
            "type": "array",
            "description": "List of order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "entryGroups": {
            "type": "array",
            "description": "List of entry groups",
            "items": {
              "$ref": "#/components/schemas/EntryGroup"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryMode": {
            "$ref": "#/components/schemas/DeliveryMode"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "paymentInfo": {
            "$ref": "#/components/schemas/PaymentDetails"
          },
          "appliedOrderPromotions": {
            "type": "array",
            "description": "List of applied order promotions",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "appliedProductPromotions": {
            "type": "array",
            "description": "List of applied product promotions",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "productDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "orderDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "totalDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "site": {
            "type": "string",
            "description": "Site"
          },
          "store": {
            "type": "string",
            "description": "Store"
          },
          "guid": {
            "type": "string",
            "description": "Guest user id identifier"
          },
          "calculated": {
            "type": "boolean",
            "description": "Flag showing if order is calculated"
          },
          "appliedVouchers": {
            "type": "array",
            "description": "List of applied vouchers",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            }
          },
          "user": {
            "$ref": "#/components/schemas/Principal"
          },
          "pickupOrderGroups": {
            "type": "array",
            "description": "List of pickup order entry group",
            "items": {
              "$ref": "#/components/schemas/PickupOrderEntryGroup"
            }
          },
          "deliveryOrderGroups": {
            "type": "array",
            "description": "List of delivery order entries group",
            "items": {
              "$ref": "#/components/schemas/DeliveryOrderEntryGroup"
            }
          },
          "pickupItemsQuantity": {
            "type": "integer",
            "description": "Quantity of pickup items",
            "format": "int64"
          },
          "deliveryItemsQuantity": {
            "type": "integer",
            "description": "Quantity of delivery items",
            "format": "int64"
          },
          "totalUnitCount": {
            "type": "integer",
            "description": "Total unit count",
            "format": "int32"
          },
          "potentialOrderPromotions": {
            "type": "array",
            "description": "List of potential order promotions for cart",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "potentialProductPromotions": {
            "type": "array",
            "description": "List of potential product promotions for cart",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the cart"
          },
          "description": {
            "type": "string",
            "description": "Description of the cart"
          },
          "expirationTime": {
            "type": "string",
            "description": "Date of cart expiration time",
            "format": "date-time"
          },
          "saveTime": {
            "type": "string",
            "description": "Date of saving cart",
            "format": "date-time"
          },
          "savedBy": {
            "$ref": "#/components/schemas/Principal"
          },
          "costCenter": {
            "$ref": "#/components/schemas/B2BCostCenter"
          },
          "paymentType": {
            "$ref": "#/components/schemas/B2BPaymentTypeData"
          },
          "purchaseOrderNumber": {
            "type": "string"
          },
          "importErrorMessage": {
            "type": "string"
          },
          "importStatus": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "COMPLETED"
            ]
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          },
          "orderEntryGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenGroup"
            }
          },
          "orderVolumeMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "missingEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          }
        },
        "description": "Cart object."
      },
      "SearchQuery": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of search query"
          }
        },
        "description": "Representation of a Search Query"
      },
      "PromotionResultList": {
        "type": "object",
        "properties": {
          "promotions": {
            "type": "array",
            "description": "List of promotion results",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          }
        },
        "description": "Representation of a Promotion result list"
      },
      "ReplenishmentOrderList": {
        "type": "object",
        "properties": {
          "replenishmentOrders": {
            "type": "array",
            "description": "List of Replenishment Orders",
            "items": {
              "$ref": "#/components/schemas/ReplenishmentOrder"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of a Replenishment Order List"
      },
      "CastrolIndirectSkewSchemeWSData": {
        "type": "object",
        "properties": {
          "distributorCode": {
            "type": "string"
          },
          "parentCompany": {
            "type": "string"
          },
          "schemeCode": {
            "type": "string"
          },
          "schemeDescription": {
            "type": "string"
          },
          "skewTarget": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "additionalSkewPayout": {
            "type": "number",
            "format": "double"
          },
          "formattedAdditionalSkewPayout": {
            "type": "string"
          },
          "skewTargetAchievement": {
            "type": "number",
            "format": "double"
          },
          "skewPending": {
            "type": "integer",
            "format": "int32"
          },
          "skewDaysPending": {
            "type": "integer",
            "format": "int32"
          },
          "skewPayout": {
            "type": "number",
            "format": "double"
          },
          "formattedSkewValuePayOut": {
            "type": "string"
          }
        }
      },
      "AddressValidation": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/errorList"
          },
          "decision": {
            "type": "string",
            "description": "Decision"
          },
          "suggestedAddresses": {
            "type": "array",
            "description": "List of suggested addresses",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "description": "Representation of an Address Validation"
      },
      "AviationPaginationDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "errorList": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error"
            }
          }
        },
        "description": "List of errors"
      },
      "BudgetShallow": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Boolean flag of whether the Budget is active"
          },
          "budget": {
            "type": "number",
            "description": "Value of Budget",
            "example": 50000
          },
          "code": {
            "type": "string",
            "description": "Code of the Budget",
            "example": "Monthly_50K_USD"
          },
          "name": {
            "type": "string",
            "description": "The name of the Budget",
            "example": "Monthly 50K USD"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "startDate": {
            "type": "string",
            "description": "The start date of the Budget",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "The end date of the Budget",
            "format": "date-time"
          },
          "selected": {
            "type": "boolean",
            "description": "Boolean flag whether the budget is selected for a cost center",
            "example": true
          }
        },
        "description": "Request body fields required and optional to operate on Budget data. This bean is shallow, which means its potential relationship fields to other Org Unit fields are simple ids. No Org Unit WsDTO should be declared in this bean to avoid circular references."
      },
      "ConsentTemplateList": {
        "type": "object",
        "properties": {
          "consentTemplates": {
            "type": "array",
            "description": "List of consent templates",
            "items": {
              "$ref": "#/components/schemas/ConsentTemplate"
            }
          }
        },
        "description": "Representation of a Consent Template List"
      },
      "B2BPaymentTypeData": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "CastrolIndirectOrderEntryGroup": {
        "type": "object",
        "properties": {
          "retailerCode": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "distributor": {
            "type": "string"
          },
          "paymentOption": {
            "type": "string"
          },
          "orderRemarks": {
            "type": "string"
          },
          "distributorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "entryAttribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolIndirectOrderEntryAttribute"
            }
          },
          "castrolTotalUnit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolTotalUnit"
            }
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryFormattedDate": {
            "type": "string"
          },
          "orderSource": {
            "type": "string"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenInvoice"
            }
          },
          "cancellationSource": {
            "type": "string"
          }
        }
      },
      "CatalogList": {
        "type": "object",
        "properties": {
          "catalogs": {
            "type": "array",
            "description": "List of catalog items",
            "items": {
              "$ref": "#/components/schemas/Catalog"
            }
          }
        },
        "description": "Representation of a Catalog List"
      },
      "NextGenGroup": {
        "type": "object",
        "properties": {
          "cedOrderEntrygroup": {
            "$ref": "#/components/schemas/CEDOrderEntryGroupData"
          },
          "cidOrderEntrygroup": {
            "$ref": "#/components/schemas/CastrolIndirectOrderEntryGroup"
          }
        }
      },
      "FeatureValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the feature"
          }
        },
        "description": "Representation of a Feature Value"
      },
      "CIDLedgerDTO": {
        "type": "object",
        "properties": {
          "ledgerNumber": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountInWords": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "distributorName": {
            "type": "string"
          },
          "dealerName": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "partyCode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "paymentMode": {
            "type": "string"
          },
          "schemeCode": {
            "type": "string"
          },
          "castrolDealerInvoiceData": {
            "$ref": "#/components/schemas/CastrolDealerInvoiceDTO"
          }
        }
      },
      "PriceOffer": {
        "type": "object",
        "properties": {
          "grn": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricesList"
            }
          }
        }
      },
      "DataImportErrorResponse": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "StoreFinderSearchPage": {
        "type": "object",
        "properties": {
          "stores": {
            "type": "array",
            "description": "List of stores",
            "items": {
              "$ref": "#/components/schemas/PointOfService"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sortings",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "locationText": {
            "type": "string",
            "description": "Location text"
          },
          "sourceLatitude": {
            "type": "number",
            "description": "Source latitude",
            "format": "double"
          },
          "sourceLongitude": {
            "type": "number",
            "description": "Source longitude",
            "format": "double"
          },
          "boundNorthLatitude": {
            "type": "number",
            "description": "Bound north latitude",
            "format": "double"
          },
          "boundEastLongitude": {
            "type": "number",
            "description": "Bound east longitude",
            "format": "double"
          },
          "boundSouthLatitude": {
            "type": "number",
            "description": "Bound south latitude",
            "format": "double"
          },
          "boundWestLongitude": {
            "type": "number",
            "description": "Bound west longitude",
            "format": "double"
          }
        },
        "description": "Representation of a Store finder search page"
      },
      "AviationTaxAndCharge": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "itemId": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "deliveryId": {
            "type": "string"
          },
          "chargeType": {
            "type": "string"
          },
          "baseRate": {
            "type": "string"
          },
          "totalBaseRate": {
            "type": "string"
          },
          "totalBaseRateCurrency": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "string"
          },
          "totalValue": {
            "type": "string"
          },
          "totalValueCurrency": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          }
        }
      },
      "DisputePagination": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "disputeResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationDispute"
            }
          }
        }
      },
      "InvoiceStatusList": {
        "type": "object",
        "properties": {
          "codeAndCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndCount"
            }
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "className": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "B2BApprovalProcess": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the Organizational Approval Process",
            "example": "accApproval"
          },
          "name": {
            "type": "string",
            "description": "Name of the Organizational Approval Process",
            "example": "Escalation Approval with Merchant Check"
          }
        },
        "description": "Representation of an organizational approval process"
      },
      "CastrolSalesAreaAndStatus": {
        "type": "object",
        "properties": {
          "salesArea": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "distributionChannel": {
            "type": "string"
          }
        }
      },
      "Principal": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique user identifier"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          }
        },
        "description": "Representation of a Principal webservice DTO used for defining User data types"
      },
      "PurchaseOrderNumber": {
        "type": "object",
        "properties": {
          "purchaseOrderNumber": {
            "type": "string"
          }
        }
      },
      "NextGenInvoices": {
        "type": "object",
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenInvoice"
            }
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          },
          "facets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Facet"
            }
          }
        }
      },
      "RequestBodyDTO": {
        "type": "object",
        "properties": {
          "idpToken": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "AviationLocation": {
        "type": "object",
        "properties": {
          "countryName": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "avIATA": {
            "type": "string"
          },
          "avICAO": {
            "type": "string"
          }
        }
      },
      "FeatureUnit": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "Symbol of the feature unit"
          },
          "name": {
            "type": "string",
            "description": "Name of the feature unit"
          },
          "unitType": {
            "type": "string",
            "description": "Type of the feature unit"
          }
        },
        "description": "Representation of a Feature Unit"
      },
      "VariantCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Variant category name"
          },
          "hasImage": {
            "type": "boolean",
            "description": "Flag if varian category has image assigned"
          },
          "priority": {
            "type": "integer",
            "description": "Priority number of variant category",
            "format": "int32"
          }
        },
        "description": "Representation of a Variant Category"
      },
      "AviationCreateFuelOrder": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "refNo": {
            "type": "string"
          },
          "errors": {
            "type": "string"
          },
          "afrStatus": {
            "type": "string"
          }
        }
      },
      "AviationGetFuelOrderRequestBody": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          },
          "isPast": {
            "type": "boolean"
          }
        }
      },
      "PointOfServiceList": {
        "type": "object",
        "properties": {
          "pointOfServices": {
            "type": "array",
            "description": "List of points of service",
            "items": {
              "$ref": "#/components/schemas/PointOfService"
            }
          }
        },
        "description": "Representation of a Point of Service List"
      },
      "CreateComment": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Text of the comment.",
            "example": "Text of the comment"
          }
        },
        "description": "Text of the comment"
      },
      "ReplenishmentOrder": {
        "required": [
          "replenishmentOrderCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code number of order"
          },
          "net": {
            "type": "boolean",
            "description": "Flag stating iv value is net-value"
          },
          "totalPriceWithTax": {
            "$ref": "#/components/schemas/Price"
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "totalTax": {
            "$ref": "#/components/schemas/Price"
          },
          "subTotal": {
            "$ref": "#/components/schemas/Price"
          },
          "deliveryCost": {
            "$ref": "#/components/schemas/Price"
          },
          "entries": {
            "type": "array",
            "description": "List of order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "entryGroups": {
            "type": "array",
            "description": "List of entry groups",
            "items": {
              "$ref": "#/components/schemas/EntryGroup"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryMode": {
            "$ref": "#/components/schemas/DeliveryMode"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "paymentInfo": {
            "$ref": "#/components/schemas/PaymentDetails"
          },
          "appliedOrderPromotions": {
            "type": "array",
            "description": "List of applied order promotions",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "appliedProductPromotions": {
            "type": "array",
            "description": "List of applied product promotions",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "productDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "orderDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "totalDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "site": {
            "type": "string",
            "description": "Site"
          },
          "store": {
            "type": "string",
            "description": "Store"
          },
          "guid": {
            "type": "string",
            "description": "Guest user id identifier"
          },
          "calculated": {
            "type": "boolean",
            "description": "Flag showing if order is calculated"
          },
          "appliedVouchers": {
            "type": "array",
            "description": "List of applied vouchers",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            }
          },
          "user": {
            "$ref": "#/components/schemas/Principal"
          },
          "pickupOrderGroups": {
            "type": "array",
            "description": "List of pickup order entry group",
            "items": {
              "$ref": "#/components/schemas/PickupOrderEntryGroup"
            }
          },
          "deliveryOrderGroups": {
            "type": "array",
            "description": "List of delivery order entries group",
            "items": {
              "$ref": "#/components/schemas/DeliveryOrderEntryGroup"
            }
          },
          "pickupItemsQuantity": {
            "type": "integer",
            "description": "Quantity of pickup items",
            "format": "int64"
          },
          "deliveryItemsQuantity": {
            "type": "integer",
            "description": "Quantity of delivery items",
            "format": "int64"
          },
          "totalUnitCount": {
            "type": "integer",
            "description": "Total unit count",
            "format": "int32"
          },
          "potentialOrderPromotions": {
            "type": "array",
            "description": "List of potential order promotions for cart",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "potentialProductPromotions": {
            "type": "array",
            "description": "List of potential product promotions for cart",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the cart"
          },
          "description": {
            "type": "string",
            "description": "Description of the cart"
          },
          "expirationTime": {
            "type": "string",
            "description": "Date of cart expiration time",
            "format": "date-time"
          },
          "saveTime": {
            "type": "string",
            "description": "Date of saving cart",
            "format": "date-time"
          },
          "savedBy": {
            "$ref": "#/components/schemas/Principal"
          },
          "costCenter": {
            "$ref": "#/components/schemas/B2BCostCenter"
          },
          "paymentType": {
            "$ref": "#/components/schemas/B2BPaymentTypeData"
          },
          "purchaseOrderNumber": {
            "type": "string"
          },
          "importErrorMessage": {
            "type": "string"
          },
          "importStatus": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "COMPLETED"
            ]
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          },
          "orderEntryGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenGroup"
            }
          },
          "orderVolumeMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "missingEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "active": {
            "type": "boolean",
            "description": "Is the Replenishment Order active",
            "example": false
          },
          "trigger": {
            "$ref": "#/components/schemas/Trigger"
          },
          "firstDate": {
            "type": "string",
            "description": "First date of the replenishment order",
            "format": "date-time"
          },
          "replenishmentOrderCode": {
            "type": "string",
            "description": "Unique code for the replenishment order",
            "example": "502BJ"
          }
        },
        "description": "Request body fields required and optional to operate on Replenishment Order data."
      },
      "OrgUserRegistrationData": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "titleCode": {
            "type": "string",
            "description": "Code of the user's title",
            "example": "mr"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user",
            "example": "akiro"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user",
            "example": "nakamura"
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "akiro.nakamura@rustic-hw.com"
          },
          "message": {
            "type": "string",
            "description": "Contains info to approver, usually composed by UI with a template",
            "example": "Department:Ground support; Position:Chief safe guard; Report to: steve jackson; comments: Please create new account for me"
          }
        },
        "description": "Data object that contains information necessary to apply user registration"
      },
      "OrderEntry": {
        "type": "object",
        "properties": {
          "entryNumber": {
            "type": "integer",
            "description": "Entry number of the order entry",
            "format": "date-time"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity number of items in order entry",
            "format": "int64"
          },
          "updateable": {
            "type": "boolean",
            "description": "Flag defining if order entry item is updateable"
          }
        },
        "description": "Request body parameter that contains details such as the quantity of product (quantity), and the pickup store name (deliveryPointOfService.name)\n\nThe DTO is in XML or .json format."
      },
      "Trigger": {
        "type": "object",
        "properties": {
          "activationTime": {
            "type": "string",
            "description": "The time the trigger will be activated",
            "format": "date-time"
          },
          "displayTimeTable": {
            "type": "string",
            "description": "Description of when the trigger is being activated",
            "example": "Every Monday at 00:00:00"
          }
        },
        "description": "Representation of a Trigger"
      },
      "StoreCountList": {
        "type": "object",
        "properties": {
          "countriesAndRegionsStoreCount": {
            "type": "array",
            "description": "List of store counts",
            "items": {
              "$ref": "#/components/schemas/StoreCount"
            }
          }
        },
        "description": "Representation of a Store Count List"
      },
      "SkuCountResult": {
        "type": "object",
        "properties": {
          "currentResultCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of Sort"
          },
          "name": {
            "type": "string",
            "description": "Name of Sort"
          },
          "selected": {
            "type": "boolean",
            "description": "Flag stating when Sort is selected"
          }
        },
        "description": "Representation a Sort option"
      },
      "TradeSchemeList": {
        "type": "object",
        "properties": {
          "totalPayOut": {
            "type": "number",
            "format": "double"
          },
          "formattedValueTotalPayOut": {
            "type": "string"
          },
          "schemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradeScheme"
            }
          },
          "totalFOCAchievedLitre": {
            "type": "number",
            "format": "double"
          },
          "totalFOCAchievedKg": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "NextGenUserInformation": {
        "type": "object",
        "properties": {
          "firstLogin": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderSimulation": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorMessage"
            }
          }
        }
      },
      "OrderHistory": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of Order History"
          },
          "status": {
            "type": "string",
            "description": "Status of Order History"
          },
          "statusDisplay": {
            "type": "string",
            "description": "Status display"
          },
          "placed": {
            "type": "string",
            "description": "Date of placing order",
            "format": "date-time"
          },
          "guid": {
            "type": "string",
            "description": "Guest user identifier"
          },
          "total": {
            "$ref": "#/components/schemas/Price"
          },
          "costCenter": {
            "$ref": "#/components/schemas/B2BCostCenter"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number"
          },
          "orgCustomer": {
            "$ref": "#/components/schemas/User"
          },
          "orderEntryGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenGroup"
            }
          },
          "personalReference": {
            "type": "string"
          },
          "turfViewOrderNumber": {
            "type": "string"
          },
          "orderSource": {
            "type": "string"
          },
          "placedFormattedDate": {
            "type": "string"
          }
        },
        "description": "Representation of an Order History"
      },
      "Facet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the facet"
          },
          "priority": {
            "type": "integer",
            "description": "Priority value of the facet",
            "format": "int32"
          },
          "category": {
            "type": "boolean",
            "description": "Flag stating if facet is category facet"
          },
          "multiSelect": {
            "type": "boolean",
            "description": "Flag stating if facet is multiSelect"
          },
          "visible": {
            "type": "boolean",
            "description": "Flag stating if facet is visible"
          },
          "topValues": {
            "type": "array",
            "description": "List of top facet values",
            "items": {
              "$ref": "#/components/schemas/FacetValue"
            }
          },
          "values": {
            "type": "array",
            "description": "List of all facet values",
            "items": {
              "$ref": "#/components/schemas/FacetValue"
            }
          },
          "code": {
            "type": "string",
            "description": "code of the facet"
          }
        },
        "description": "Representation of a Facet"
      },
      "Order": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code number of order"
          },
          "net": {
            "type": "boolean",
            "description": "Flag stating iv value is net-value"
          },
          "totalPriceWithTax": {
            "$ref": "#/components/schemas/Price"
          },
          "totalPrice": {
            "$ref": "#/components/schemas/Price"
          },
          "totalTax": {
            "$ref": "#/components/schemas/Price"
          },
          "subTotal": {
            "$ref": "#/components/schemas/Price"
          },
          "deliveryCost": {
            "$ref": "#/components/schemas/Price"
          },
          "entries": {
            "type": "array",
            "description": "List of order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "entryGroups": {
            "type": "array",
            "description": "List of entry groups",
            "items": {
              "$ref": "#/components/schemas/EntryGroup"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryMode": {
            "$ref": "#/components/schemas/DeliveryMode"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "paymentInfo": {
            "$ref": "#/components/schemas/PaymentDetails"
          },
          "appliedOrderPromotions": {
            "type": "array",
            "description": "List of applied order promotions",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "appliedProductPromotions": {
            "type": "array",
            "description": "List of applied product promotions",
            "items": {
              "$ref": "#/components/schemas/PromotionResult"
            }
          },
          "productDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "orderDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "totalDiscounts": {
            "$ref": "#/components/schemas/Price"
          },
          "site": {
            "type": "string",
            "description": "Site"
          },
          "store": {
            "type": "string",
            "description": "Store"
          },
          "guid": {
            "type": "string",
            "description": "Guest user id identifier"
          },
          "calculated": {
            "type": "boolean",
            "description": "Flag showing if order is calculated"
          },
          "appliedVouchers": {
            "type": "array",
            "description": "List of applied vouchers",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            }
          },
          "user": {
            "$ref": "#/components/schemas/Principal"
          },
          "pickupOrderGroups": {
            "type": "array",
            "description": "List of pickup order entry group",
            "items": {
              "$ref": "#/components/schemas/PickupOrderEntryGroup"
            }
          },
          "deliveryOrderGroups": {
            "type": "array",
            "description": "List of delivery order entries group",
            "items": {
              "$ref": "#/components/schemas/DeliveryOrderEntryGroup"
            }
          },
          "pickupItemsQuantity": {
            "type": "integer",
            "description": "Quantity of pickup items",
            "format": "int64"
          },
          "deliveryItemsQuantity": {
            "type": "integer",
            "description": "Quantity of delivery items",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Date of order creation",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Status of order"
          },
          "statusDisplay": {
            "type": "string",
            "description": "Status display"
          },
          "guestCustomer": {
            "type": "boolean",
            "description": "Flag showing if customer is Guest customer"
          },
          "consignments": {
            "type": "array",
            "description": "List of consignment",
            "items": {
              "$ref": "#/components/schemas/Consignment"
            }
          },
          "deliveryStatus": {
            "type": "string",
            "description": "Order delivery status"
          },
          "deliveryStatusDisplay": {
            "type": "string",
            "description": "Order delivery status display"
          },
          "unconsignedEntries": {
            "type": "array",
            "description": "List of unconsigned order entries",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "cancellable": {
            "type": "boolean",
            "description": "Boolean flag showing if order is cancellable",
            "example": true
          },
          "returnable": {
            "type": "boolean",
            "description": "Boolean flag showing if order is returnable",
            "example": true
          },
          "totalUnitCount": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Purchase order number"
          },
          "orgCustomer": {
            "$ref": "#/components/schemas/User"
          },
          "costCenter": {
            "$ref": "#/components/schemas/B2BCostCenter"
          },
          "permissionResults": {
            "type": "array",
            "description": "Results of permissions associated with the order",
            "items": {
              "$ref": "#/components/schemas/OrderApprovalPermissionResult"
            }
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "deliveryNote": {
            "type": "string"
          },
          "orderEntryGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenGroup"
            }
          }
        },
        "description": "Representation of an Order"
      },
      "CreatePresetSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "presetId": {
            "type": "string"
          }
        }
      },
      "AviationSaveOfferRequestBody": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "isInternal": {
            "type": "boolean"
          }
        }
      },
      "WeekdayOpeningDay": {
        "type": "object",
        "properties": {
          "openingTime": {
            "$ref": "#/components/schemas/Time"
          },
          "closingTime": {
            "$ref": "#/components/schemas/Time"
          },
          "weekDay": {
            "type": "string",
            "description": "Text representation of week day opening day"
          },
          "closed": {
            "type": "boolean",
            "description": "Flag stating if weekday opening day is closed"
          }
        },
        "description": "Representation of a Weekday Opening Day"
      },
      "CastrolDealersWsData": {
        "type": "object",
        "properties": {
          "dealer": {
            "type": "string"
          },
          "retailerCode": {
            "type": "string"
          },
          "dealerAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "distributor": {
            "type": "string"
          },
          "distributorCode": {
            "type": "string"
          },
          "distributorAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "phoneNumber": {
            "type": "string"
          },
          "showPriceModal": {
            "type": "boolean"
          },
          "salesChannel": {
            "type": "string"
          },
          "csdName": {
            "type": "string"
          },
          "dealerBannerAcceptances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIDDealerBannerAcceptance"
            }
          },
          "segmentId": {
            "type": "string"
          }
        }
      },
      "Subscriptions": {
        "type": "object",
        "properties": {
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ShipToUnitDetails": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          },
          "salesOrg": {
            "type": "string"
          },
          "channelDivision": {
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "soldToUnit": {
            "type": "string"
          },
          "billToUnit": {
            "type": "string"
          },
          "soldToUnitName": {
            "type": "string"
          },
          "shipToUnitName": {
            "type": "string"
          },
          "shipToUnitName2": {
            "type": "string"
          },
          "billToUnitName": {
            "type": "string"
          },
          "currencyData": {
            "$ref": "#/components/schemas/Currency"
          }
        }
      },
      "sort": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "asc": {
            "type": "boolean"
          }
        },
        "description": "Sort option"
      },
      "Catalog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of abstract catalog item"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of abstract catalog item"
          },
          "url": {
            "type": "string",
            "description": "Url address of abstract catalog item"
          },
          "catalogVersions": {
            "type": "array",
            "description": "List of versions of catalog",
            "items": {
              "$ref": "#/components/schemas/CatalogVersion"
            }
          }
        },
        "description": "Representation of an Catalog"
      },
      "AviationDeliveryTicketResponse": {
        "type": "object",
        "properties": {
          "deliveryId": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "base64Pdf": {
            "type": "string"
          }
        }
      },
      "CastrolIndirectSlabEntryList": {
        "type": "object",
        "properties": {
          "schemeCode": {
            "type": "string"
          },
          "schemeName": {
            "type": "string"
          },
          "slabEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolIndirectSlabEntry"
            }
          }
        }
      },
      "CastrolTradeSchemeProductList": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "schemeCode": {
            "type": "string"
          }
        }
      },
      "QuoteMetadata": {
        "required": [
          "expirationTime",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the quote.",
            "example": "Quote Name"
          },
          "description": {
            "type": "string",
            "description": "Description of the quote.",
            "example": "Quote Description"
          },
          "expirationTime": {
            "type": "string",
            "description": "Expiration time of the quote.",
            "format": "date-time"
          }
        },
        "description": "Updated name, description or expiry date of the quote"
      },
      "Price": {
        "type": "object",
        "properties": {
          "effectiveFrom": {
            "type": "string"
          },
          "effectiveTo": {
            "type": "string"
          },
          "pricingBasis": {
            "type": "string"
          },
          "totalPrice": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitOfMeasurement": {
            "type": "string"
          },
          "mandatoryFixed": {
            "type": "string"
          },
          "mandatoryConditionalFixed": {
            "type": "string"
          },
          "mandatoryFixedCurrency": {
            "type": "string"
          },
          "mandatoryFixedUOM": {
            "type": "string"
          },
          "mandatoryVariable": {
            "type": "string"
          },
          "mandatoryConditionalVariable": {
            "type": "string"
          },
          "mandatoryVariableCurrency": {
            "type": "string"
          },
          "mandatoryVariableUOM": {
            "type": "string"
          },
          "currencyConverted": {
            "type": "string"
          },
          "indexCodeDesc": {
            "type": "string"
          },
          "bandPriceDesc": {
            "type": "string"
          },
          "netPriceConverted": {
            "type": "string"
          },
          "priceDiffConverted": {
            "type": "string"
          },
          "priceDiff": {
            "type": "string"
          },
          "priceBasisConverted": {
            "type": "string"
          },
          "isFallback": {
            "type": "string"
          },
          "isISP": {
            "type": "string"
          },
          "fuelProvider": {
            "type": "string"
          }
        }
      },
      "CEDOrderEntryGroupData": {
        "type": "object",
        "properties": {
          "castrolTotalUnit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolTotalUnit"
            }
          },
          "orderEntryAttribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CEDOrderEntryAttribute"
            }
          },
          "logisticDiscount": {
            "$ref": "#/components/schemas/CEDDiscount"
          },
          "surcharge": {
            "$ref": "#/components/schemas/CEDSurcharge"
          },
          "calendarFirstDate": {
            "type": "string",
            "format": "date-time"
          },
          "reqDelDate": {
            "type": "string",
            "format": "date-time"
          },
          "externalOrderNo": {
            "type": "string"
          },
          "invoicingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "status": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          }
        }
      },
      "StoreFinderStockSearchPage": {
        "type": "object",
        "properties": {
          "stores": {
            "type": "array",
            "description": "List of stores",
            "items": {
              "$ref": "#/components/schemas/PointOfServiceStock"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "locationText": {
            "type": "string",
            "description": "Location text"
          },
          "sourceLatitude": {
            "type": "number",
            "description": "Source latitude",
            "format": "double"
          },
          "sourceLongitude": {
            "type": "number",
            "description": "Source longitude",
            "format": "double"
          },
          "boundNorthLatitude": {
            "type": "number",
            "description": "Bound to north latitude",
            "format": "double"
          },
          "boundEastLongitude": {
            "type": "number",
            "description": "Bound to east longitude",
            "format": "double"
          },
          "boundSouthLatitude": {
            "type": "number",
            "description": "Bound to south latitude",
            "format": "double"
          },
          "boundWestLongitude": {
            "type": "number",
            "description": "Bound to west longitude",
            "format": "double"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "description": "Representation of a Store Finder Stock Search Page"
      },
      "DeliveryNote": {
        "type": "object",
        "properties": {
          "deliveryNote": {
            "type": "string"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "dealer": {
            "type": "string"
          },
          "lastReadNotificationTimeStamp": {
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationList"
            }
          }
        }
      },
      "DeliveryMode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the delivery mode"
          },
          "name": {
            "type": "string",
            "description": "Name of the delivery mode"
          },
          "description": {
            "type": "string",
            "description": "Description of the delivery mode"
          },
          "deliveryCost": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Representation of a Delivery mode"
      },
      "CategoryHierarchy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of abstract catalog item"
          },
          "lastModified": {
            "type": "string",
            "description": "Date of last modification",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of abstract catalog item"
          },
          "url": {
            "type": "string",
            "description": "Url address of abstract catalog item"
          },
          "subcategories": {
            "type": "array",
            "description": "List of subcategory hierarchies",
            "items": {
              "$ref": "#/components/schemas/CategoryHierarchy"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "productCount": {
            "type": "integer",
            "description": "Total number of products inside the category",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of the category"
          },
          "keyContacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          }
        },
        "description": "Representation of a Category Hierarchy"
      },
      "Compulsory": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "chargeType": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitOfMeasurement": {
            "type": "string"
          },
          "aviationType": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique user identifier"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "defaultAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "titleCode": {
            "type": "string",
            "description": "User title code"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "firstName": {
            "type": "string",
            "description": "User first name"
          },
          "lastName": {
            "type": "string",
            "description": "User last name"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "displayUid": {
            "type": "string",
            "description": "User identifier"
          },
          "customerId": {
            "type": "string",
            "description": "Customer identifier"
          },
          "deactivationDate": {
            "type": "string",
            "description": "Deactivation date",
            "format": "date-time"
          },
          "defaultPointOfServiceName": {
            "type": "string",
            "description": "Name of the default pick up location",
            "example": "Misato"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/B2BUnit"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "approvers": {
            "type": "array",
            "description": "List of organizational approvers",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "selected": {
            "type": "boolean",
            "description": "Boolean flag of whether the user is selected",
            "example": true
          },
          "active": {
            "type": "boolean",
            "description": "Boolean flag of whether the user is active/enabled or not",
            "example": true
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "example": "mark.rivers@rustic-hw.com"
          },
          "salesforceId": {
            "type": "string"
          },
          "contactAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressData"
            }
          },
          "b2bUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenB2BUnit"
            }
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "userInformation": {
            "$ref": "#/components/schemas/NextGenUserInformation"
          },
          "dealers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CastrolDealersWsData"
            }
          },
          "showPromoModal": {
            "type": "boolean"
          },
          "mobileNumber": {
            "type": "string"
          },
          "baseSiteId": {
            "type": "string"
          },
          "isCustomerRegistered": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          }
        },
        "description": "User's object."
      },
      "Category": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the category"
          },
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "url": {
            "type": "string",
            "description": "URL of the category"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          },
          "rootCategory": {
            "type": "string"
          },
          "keyContacts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Representation of a Category"
      },
      "CartList": {
        "type": "object",
        "properties": {
          "carts": {
            "type": "array",
            "description": "List of carts",
            "items": {
              "$ref": "#/components/schemas/Cart"
            }
          }
        },
        "description": "Representation of a Cart list"
      },
      "ResolutionCategoryList": {
        "type": "object",
        "properties": {
          "codeAndCount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndCount"
            }
          }
        }
      },
      "CastrolIndirectExclusiveDiscountProducts": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          },
          "exclusiveDiscountProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "retailerCode": {
            "type": "string"
          }
        }
      },
      "B2BCostCenterList": {
        "type": "object",
        "properties": {
          "costCenters": {
            "type": "array",
            "description": "List of cost centers",
            "items": {
              "$ref": "#/components/schemas/B2BCostCenter"
            }
          },
          "sorts": {
            "type": "array",
            "description": "List of sorts",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          }
        },
        "description": "Representation of a cost center list"
      },
      "CancellationRequestEntryInput": {
        "required": [
          "orderEntryNumber",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "orderEntryNumber": {
            "type": "integer",
            "description": "Order entry number of the cancelled product",
            "format": "int32",
            "example": 1
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the product which belongs to the order entry and is requested to be cancelled",
            "format": "int64",
            "example": 5
          }
        },
        "description": "Representation of a cancellation request entry input for an order"
      },
      "AmendOrderEntry": {
        "type": "object",
        "properties": {
          "skuCode": {
            "type": "string"
          },
          "actionFlag": {
            "type": "string"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the error e.g. 'LowStockError'."
          },
          "reason": {
            "type": "string",
            "description": "Additional classification specific for each error type e.g. 'noStock'."
          },
          "message": {
            "type": "string",
            "description": "Descriptive, human readable error message."
          },
          "subjectType": {
            "type": "string",
            "description": "Type of the object related to the error e.g. 'entry'."
          },
          "subject": {
            "type": "string",
            "description": "Identifier of the related object e.g. '1'."
          },
          "errorCode": {
            "type": "string",
            "description": "Error code"
          }
        },
        "description": "Error message"
      },
      "ReturnRequestEntryInput": {
        "required": [
          "orderEntryNumber",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "orderEntryNumber": {
            "type": "integer",
            "description": "Order entry number of the returned product",
            "format": "int32",
            "example": 1
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the product which belongs to the order entry and is requested to be returned",
            "format": "int64",
            "example": 5
          }
        },
        "description": "Representation of a return request entry input for an order"
      },
      "BaseOption": {
        "type": "object",
        "properties": {
          "variantType": {
            "type": "string",
            "description": "Variant type of base option"
          },
          "options": {
            "type": "array",
            "description": "List of all variant options",
            "items": {
              "$ref": "#/components/schemas/VariantOption"
            }
          },
          "selected": {
            "$ref": "#/components/schemas/VariantOption"
          }
        },
        "description": "Representation of a Base Option"
      },
      "FacetValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the facet value"
          },
          "count": {
            "type": "integer",
            "description": "Count of the facet value",
            "format": "int64"
          },
          "query": {
            "$ref": "#/components/schemas/SearchState"
          },
          "selected": {
            "type": "boolean",
            "description": "Flag stating if facet value is selected"
          },
          "code": {
            "type": "string"
          },
          "filterQuery": {
            "type": "string"
          }
        },
        "description": "Representation of a Facet Value"
      },
      "CardType": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Card type code"
          },
          "name": {
            "type": "string",
            "description": "Card type name"
          }
        },
        "description": "Representation of a Card Type"
      },
      "AviationFuelOrderCancelResponseBody": {
        "type": "object",
        "properties": {
          "requestReference": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "PFEPdfCountResponseData": {
        "type": "object",
        "properties": {
          "requestedPdfCount": {
            "type": "integer",
            "format": "int32"
          },
          "availablePdfCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NextGenImportFileJsonList": {
        "type": "object",
        "properties": {
          "nextGenImportFileJsonList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenImportFileJson"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "CSV_IMPORT",
              "REPEAT_ORDER"
            ]
          },
          "eventBased": {
            "type": "boolean"
          }
        },
        "description": "Product Json object."
      },
      "AddressList": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "description": "List of addresses",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "description": "Representation of an Address list"
      },
      "CurrencyList": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "description": "List of currencies",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        },
        "description": "Representation of a Currency List"
      },
      "CategorySearchPage": {
        "type": "object",
        "properties": {
          "freeTextSearch": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "keywordRedirectUrl": {
            "type": "string"
          },
          "spellingSuggestion": {
            "$ref": "#/components/schemas/SpellingSuggestion"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "currentQuery": {
            "$ref": "#/components/schemas/SearchState"
          },
          "breadcrumbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Breadcrumb"
            }
          },
          "facets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Facet"
            }
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "authenticationKey": {
            "type": "string"
          },
          "pushSubscriptionKey": {
            "type": "string"
          },
          "subscriberEndpoint": {
            "type": "string"
          }
        }
      },
      "CastrolIndirectOrderEntryAttribute": {
        "type": "object",
        "properties": {
          "orderLineInvoiceQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "orderLineDropQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "orderLineProcessingQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "orderLineSubmittedQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "productCode": {
            "type": "string"
          },
          "cancelReason": {
            "type": "string"
          }
        }
      },
      "Comment": {
        "required": [
          "creationDate",
          "fromCustomer",
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Text of the comment.",
            "example": "Text of the comment"
          },
          "creationDate": {
            "type": "string",
            "description": "Date when the comment was created.",
            "format": "date-time"
          },
          "author": {
            "$ref": "#/components/schemas/Principal"
          },
          "fromCustomer": {
            "type": "boolean",
            "description": "Flag showing if the current customer was the author of the comment.",
            "example": true
          }
        },
        "description": "Object of the comment, which can be added to any Item in the commerce suite."
      },
      "StatusSummary": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status or severity indicator, can be one of ERROR, WARNING, INFO or SUCCESS",
            "example": "ERROR"
          },
          "numberOfIssues": {
            "type": "integer",
            "description": "Number of issues per status",
            "format": "int32",
            "example": 3
          }
        },
        "description": "Representation of a status summary, an aggregated view on issues for a specific status or severity. These issues are attached to configurations of products or order entries"
      },
      "deprecatedPagination": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "description": "The number of results per page. A page may have less results if there are less than a full page of results, only on the last page in the results",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "description": "The current page number. The first page is number zero (0), the second page is number one (1), and so on",
            "format": "int32"
          },
          "sort": {
            "type": "string",
            "description": "The selected sort code"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "The total number of pages. This is the number of pages, each of pageSize, required to display the totalResults.",
            "format": "int32"
          },
          "totalResults": {
            "type": "integer",
            "description": "The total number of matched results across all pages",
            "format": "int64"
          }
        },
        "description": "Representation of a search results pagination"
      },
      "SpellingSuggestion": {
        "type": "object",
        "properties": {
          "suggestion": {
            "type": "string",
            "description": "Spelling suggestion"
          },
          "query": {
            "type": "string",
            "description": "Query for spelling suggestion"
          }
        },
        "description": "Representation of a Spell Checker Suggestion"
      },
      "PaymentDetailsList": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "description": "List of payment details",
            "items": {
              "$ref": "#/components/schemas/PaymentDetails"
            }
          }
        },
        "description": "Representation of a Payment details list"
      },
      "ReturnRequestEntryInputList": {
        "required": [
          "orderCode",
          "returnRequestEntryInputs"
        ],
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string",
            "description": "Code of the order which return request is related to",
            "example": "00000001"
          },
          "returnRequestEntryInputs": {
            "type": "array",
            "description": "Return request entry inputs which contain information about the order entries which are requested to be returned",
            "items": {
              "$ref": "#/components/schemas/ReturnRequestEntryInput"
            }
          }
        },
        "description": "Return request input list for the current order."
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Voucher": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The identifier of the Voucher. This is the first part of voucher code which holds first 3 letters, like: 123"
          },
          "voucherCode": {
            "type": "string",
            "description": "Voucher code, is the holder for keeping specific occasional voucher related to business usage. It can be generated and looks like: 123-H8BC-Y3D5-34AL"
          },
          "name": {
            "type": "string",
            "description": "Name of the voucher"
          },
          "description": {
            "type": "string",
            "description": "Description of the voucher"
          },
          "value": {
            "type": "number",
            "description": "Value of the voucher. Example of such value is: 15.0d",
            "format": "double"
          },
          "valueFormatted": {
            "type": "string",
            "description": "Formatted value of the voucher"
          },
          "valueString": {
            "type": "string",
            "description": "The value of the voucher to display. Example: 15.0%"
          },
          "freeShipping": {
            "type": "boolean",
            "description": "Specifies if the order this voucher is applied to is shipped for free (true) or not (false). Defaults to false."
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "appliedValue": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Representation of a Voucher"
      },
      "AviationUpdateUserPreference": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "SuggestionList": {
        "type": "object",
        "properties": {
          "suggestions": {
            "type": "array",
            "description": "List of suggestions",
            "items": {
              "$ref": "#/components/schemas/Suggestion"
            }
          }
        },
        "description": "Representation of a Suggestion List"
      },
      "DisputeWithCode": {
        "type": "object",
        "properties": {
          "codeAndCountData": {
            "$ref": "#/components/schemas/FilterCodeAndCount"
          },
          "disputeResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationDispute"
            }
          }
        }
      },
      "OrgDocumentType": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Organizational document type code.",
            "example": "PURCHASE_ORDER"
          },
          "name": {
            "type": "string",
            "description": "Organizational document type name.",
            "example": "Purchase Order"
          }
        },
        "description": "Representation of an organizational document type."
      },
      "AviationGetSaveOffer": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/deprecatedPagination"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationSaveOffer"
            }
          }
        }
      },
      "OrgDocument": {
        "required": [
          "amount",
          "currency",
          "formattedAmount",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the organizational document.",
            "example": "DOC-01234"
          },
          "orgDocumentType": {
            "$ref": "#/components/schemas/OrgDocumentType"
          },
          "status": {
            "type": "string",
            "description": "Organizational document status. Possible values are: open, closed.",
            "example": "open"
          },
          "createdAtDate": {
            "type": "string",
            "description": "Creation date for the organizational document.",
            "example": "2022-04-14"
          },
          "dueAtDate": {
            "type": "string",
            "description": "Due date for the organizational document.",
            "example": "2022-06-18"
          },
          "formattedAmount": {
            "type": "string",
            "description": "Original amount due for the organizational document, formatted as per the selected currency.",
            "example": "$1230.45"
          },
          "amount": {
            "type": "number",
            "description": "Original amount due for the organizational document.",
            "example": 1230.45
          },
          "formattedOpenAmount": {
            "type": "string",
            "description": "Open amount due for the organizational document, formatted as per the selected currency.",
            "example": "$430.45"
          },
          "openAmount": {
            "type": "number",
            "description": "Open amount due for the organizational document.",
            "example": 430.45
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "attachments": {
            "type": "array",
            "description": "Attachments associated to the organizational document.",
            "items": {
              "$ref": "#/components/schemas/OrgDocumentAttachment"
            }
          }
        },
        "description": "Representation of an organizational document."
      },
      "PromotionList": {
        "type": "object",
        "properties": {
          "promotions": {
            "type": "array",
            "description": "List of promotions",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          }
        },
        "description": "Representation of a Promotion list"
      },
      "NextGenWishlist2": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/pagination"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NextGenWishlist2Entry"
            }
          }
        }
      },
      "RegionList": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "description": "This is the list of Region fields that should be returned in the response body",
            "items": {
              "$ref": "#/components/schemas/Region"
            }
          }
        },
        "description": "List of Regions"
      },
      "CaptchaConfig": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates if the captcha is enabled or not",
            "example": true
          },
          "publicKey": {
            "type": "string",
            "description": "The public key used in captcha validation",
            "example": "6LdeF6tgAAAAAE_T55TB0nmg--qmbnkwqC4LPQbg"
          }
        },
        "description": "Configuration information of captcha"
      },
      "ReviewList": {
        "type": "object",
        "properties": {
          "reviews": {
            "type": "array",
            "description": "List of reviews",
            "items": {
              "$ref": "#/components/schemas/Review"
            }
          }
        },
        "description": "Representation of a Review List"
      }
    },
    "securitySchemes": {
      "oauth2_Password": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "https://bpcommunity.my.salesforce.com/services/oauth2/token",
            "scopes": {
              "basic": ""
            }
          }
        }
      },
      "oauth2_client_credentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://bpcommunity.my.salesforce.com/services/oauth2/token",
            "scopes": {
              "extended": ""
            }
          }
        }
      }
    }
  },
  "x-sap-api-type": "REST",
  "x-sap-shortText": "Enables you to manage all of the common commerce functionality.",
  "x-sap-stateInfo": {
    "state": "Active"
  },
  "x-servers": [
    {
      "templates": {
        "url": {
          "description": "SAP Commerce Cloud server URL where the application is deployed."
        }
      },
      "description": "Commerce Webservices v2 REST API endpoint",
      "url": "https://{url}/occ/v2"
    }
  ]
}